2022-10-02 16:39:56,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:39:56,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:39:56,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:39:56,119:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:39:56,194:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:54:34,259:INFO:PyCaret TSForecastingExperiment
2022-10-02 16:54:34,259:INFO:Logging name: ts-default-name
2022-10-02 16:54:34,259:INFO:ML Usecase: MLUsecase.TIME_SERIES
2022-10-02 16:54:34,259:INFO:version 3.0.0.rc4
2022-10-02 16:54:34,259:INFO:Initializing setup()
2022-10-02 16:54:34,259:INFO:self.USI: 5ee9
2022-10-02 16:54:34,259:INFO:self.variable_keys: {'X_test', 'y_train_transformed', '_ml_usecase', 'fold_generator', 'fold_param', 'exogenous_present', 'idx', '_available_plots', 'USI', 'primary_sp_to_use', 'n_jobs_param', 'data', 'log_plots_param', 'X_train', 'fh', 'X', '_all_models', 'X_test_transformed', 'logging_param', 'display_container', 'pipeline', 'X_train_transformed', 'memory', 'enforce_exogenous', 'X_transformed', 'exp_id', 'gpu_param', '_all_models_internal', 'y_train', 'y_test', 'seasonal_period', 'html_param', 'strictly_positive', 'enforce_pi', 'all_sp_values', 'exp_name_log', 'variable_keys', 'seasonality_present', 'approach_type', 'model_engines', 'index_type', '_all_metrics', '_gpu_n_jobs_param', 'y_transformed', 'y', 'master_model_container', 'y_test_transformed', 'seed'}
2022-10-02 16:54:34,267:INFO:Checking environment
2022-10-02 16:54:34,267:INFO:python_version: 3.8.13
2022-10-02 16:54:34,267:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-10-02 16:54:34,267:INFO:machine: AMD64
2022-10-02 16:54:34,267:INFO:platform: Windows-10-10.0.22000-SP0
2022-10-02 16:54:34,267:INFO:Memory: svmem(total=16497090560, available=7783010304, percent=52.8, used=8714080256, free=7783010304)
2022-10-02 16:54:34,267:INFO:Physical Core: 8
2022-10-02 16:54:34,267:INFO:Logical Core: 16
2022-10-02 16:54:34,267:INFO:Checking libraries
2022-10-02 16:54:34,267:INFO:System:
2022-10-02 16:54:34,267:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-10-02 16:54:34,267:INFO:executable: c:\Users\Alan\miniconda3\envs\pycaret\python.exe
2022-10-02 16:54:34,267:INFO:   machine: Windows-10-10.0.22000-SP0
2022-10-02 16:54:34,267:INFO:PyCaret required dependencies:
2022-10-02 16:54:34,267:INFO:                 pip: 22.2.2
2022-10-02 16:54:34,267:INFO:          setuptools: 63.4.1
2022-10-02 16:54:34,267:INFO:             pycaret: 2.3.10
2022-10-02 16:54:34,267:INFO:             IPython: 8.5.0
2022-10-02 16:54:34,267:INFO:          ipywidgets: 8.0.2
2022-10-02 16:54:34,267:INFO:                tqdm: 4.64.1
2022-10-02 16:54:34,267:INFO:               numpy: 1.22.4
2022-10-02 16:54:34,267:INFO:              pandas: 1.4.4
2022-10-02 16:54:34,267:INFO:              jinja2: 3.1.2
2022-10-02 16:54:34,267:INFO:               scipy: 1.5.4
2022-10-02 16:54:34,267:INFO:              joblib: 1.1.0
2022-10-02 16:54:34,267:INFO:             sklearn: 0.23.2
2022-10-02 16:54:34,267:INFO:                pyod: 1.0.5
2022-10-02 16:54:34,267:INFO:            imblearn: 0.7.0
2022-10-02 16:54:34,267:INFO:   category_encoders: 2.5.0
2022-10-02 16:54:34,267:INFO:            lightgbm: 3.3.2
2022-10-02 16:54:34,267:INFO:               numba: 0.54.1
2022-10-02 16:54:34,267:INFO:            requests: 2.28.1
2022-10-02 16:54:34,267:INFO:          matplotlib: 3.5.3
2022-10-02 16:54:34,267:INFO:          scikitplot: 0.3.7
2022-10-02 16:54:34,267:INFO:         yellowbrick: 1.2.1
2022-10-02 16:54:34,267:INFO:              plotly: 5.10.0
2022-10-02 16:54:34,267:INFO:             kaleido: 0.2.1
2022-10-02 16:54:34,267:INFO:         statsmodels: 0.13.2
2022-10-02 16:54:34,267:INFO:              sktime: 0.13.4
2022-10-02 16:54:34,267:INFO:               tbats: 1.1.0
2022-10-02 16:54:34,267:INFO:            pmdarima: 1.8.5
2022-10-02 16:54:34,267:INFO:              psutil: 5.9.2
2022-10-02 16:54:34,267:INFO:PyCaret optional dependencies:
2022-10-02 16:54:34,299:INFO:                shap: Not installed
2022-10-02 16:54:34,299:INFO:           interpret: Not installed
2022-10-02 16:54:34,299:INFO:                umap: 0.5.3
2022-10-02 16:54:34,299:INFO:    pandas_profiling: 3.3.0
2022-10-02 16:54:34,299:INFO:  explainerdashboard: Not installed
2022-10-02 16:54:34,299:INFO:             autoviz: Not installed
2022-10-02 16:54:34,299:INFO:           fairlearn: Not installed
2022-10-02 16:54:34,299:INFO:             xgboost: Not installed
2022-10-02 16:54:34,299:INFO:            catboost: Not installed
2022-10-02 16:54:34,299:INFO:              kmodes: 0.12.2
2022-10-02 16:54:34,299:INFO:             mlxtend: 0.19.0
2022-10-02 16:54:34,299:INFO:       statsforecast: Not installed
2022-10-02 16:54:34,299:INFO:        tune_sklearn: Not installed
2022-10-02 16:54:34,299:INFO:                 ray: Not installed
2022-10-02 16:54:34,299:INFO:            hyperopt: Not installed
2022-10-02 16:54:34,299:INFO:              optuna: Not installed
2022-10-02 16:54:34,299:INFO:               skopt: Not installed
2022-10-02 16:54:34,299:INFO:              mlflow: 1.29.0
2022-10-02 16:54:34,299:INFO:              gradio: Not installed
2022-10-02 16:54:34,299:INFO:             fastapi: Not installed
2022-10-02 16:54:34,299:INFO:             uvicorn: Not installed
2022-10-02 16:54:34,299:INFO:              m2cgen: Not installed
2022-10-02 16:54:34,299:INFO:           evidently: Not installed
2022-10-02 16:54:34,299:INFO:                nltk: 3.7
2022-10-02 16:54:34,299:INFO:            pyLDAvis: 3.3.1
2022-10-02 16:54:34,299:INFO:              gensim: 3.8.3
2022-10-02 16:54:34,307:INFO:               spacy: 2.3.7
2022-10-02 16:54:34,307:INFO:           wordcloud: 1.8.2.2
2022-10-02 16:54:34,307:INFO:            textblob: 0.17.1
2022-10-02 16:54:34,307:INFO:               fugue: Not installed
2022-10-02 16:54:34,307:INFO:           streamlit: Not installed
2022-10-02 16:54:34,307:INFO:             prophet: Not installed
2022-10-02 16:54:34,307:INFO:None
2022-10-02 16:55:05,921:INFO:PyCaret TSForecastingExperiment
2022-10-02 16:55:05,921:INFO:Logging name: ts-default-name
2022-10-02 16:55:05,921:INFO:ML Usecase: MLUsecase.TIME_SERIES
2022-10-02 16:55:05,921:INFO:version 3.0.0.rc4
2022-10-02 16:55:05,921:INFO:Initializing setup()
2022-10-02 16:55:05,921:INFO:self.USI: 8eea
2022-10-02 16:55:05,921:INFO:self.variable_keys: {'X_test', 'y_train_transformed', '_ml_usecase', 'fold_generator', 'fold_param', 'exogenous_present', 'idx', '_available_plots', 'USI', 'primary_sp_to_use', 'n_jobs_param', 'data', 'log_plots_param', 'X_train', 'fh', 'X', '_all_models', 'X_test_transformed', 'logging_param', 'display_container', 'pipeline', 'X_train_transformed', 'memory', 'enforce_exogenous', 'X_transformed', 'exp_id', 'gpu_param', '_all_models_internal', 'y_train', 'y_test', 'seasonal_period', 'html_param', 'strictly_positive', 'enforce_pi', 'all_sp_values', 'exp_name_log', 'variable_keys', 'seasonality_present', 'approach_type', 'model_engines', 'index_type', '_all_metrics', '_gpu_n_jobs_param', 'y_transformed', 'y', 'master_model_container', 'y_test_transformed', 'seed'}
2022-10-02 16:55:05,921:INFO:Checking environment
2022-10-02 16:55:05,921:INFO:python_version: 3.8.13
2022-10-02 16:55:05,921:INFO:python_build: ('default', 'Mar 28 2022 06:59:08')
2022-10-02 16:55:05,921:INFO:machine: AMD64
2022-10-02 16:55:05,921:INFO:platform: Windows-10-10.0.22000-SP0
2022-10-02 16:55:05,921:INFO:Memory: svmem(total=16497090560, available=7741239296, percent=53.1, used=8755851264, free=7741239296)
2022-10-02 16:55:05,921:INFO:Physical Core: 8
2022-10-02 16:55:05,921:INFO:Logical Core: 16
2022-10-02 16:55:05,921:INFO:Checking libraries
2022-10-02 16:55:05,921:INFO:System:
2022-10-02 16:55:05,921:INFO:    python: 3.8.13 (default, Mar 28 2022, 06:59:08) [MSC v.1916 64 bit (AMD64)]
2022-10-02 16:55:05,921:INFO:executable: c:\Users\Alan\miniconda3\envs\pycaret\python.exe
2022-10-02 16:55:05,921:INFO:   machine: Windows-10-10.0.22000-SP0
2022-10-02 16:55:05,921:INFO:PyCaret required dependencies:
2022-10-02 16:55:05,921:INFO:                 pip: 22.2.2
2022-10-02 16:55:05,921:INFO:          setuptools: 63.4.1
2022-10-02 16:55:05,921:INFO:             pycaret: 2.3.10
2022-10-02 16:55:05,921:INFO:             IPython: 8.5.0
2022-10-02 16:55:05,921:INFO:          ipywidgets: 8.0.2
2022-10-02 16:55:05,924:INFO:                tqdm: 4.64.1
2022-10-02 16:55:05,924:INFO:               numpy: 1.22.4
2022-10-02 16:55:05,924:INFO:              pandas: 1.4.4
2022-10-02 16:55:05,924:INFO:              jinja2: 3.1.2
2022-10-02 16:55:05,924:INFO:               scipy: 1.5.4
2022-10-02 16:55:05,924:INFO:              joblib: 1.1.0
2022-10-02 16:55:05,924:INFO:             sklearn: 0.23.2
2022-10-02 16:55:05,924:INFO:                pyod: 1.0.5
2022-10-02 16:55:05,924:INFO:            imblearn: 0.7.0
2022-10-02 16:55:05,924:INFO:   category_encoders: 2.5.0
2022-10-02 16:55:05,924:INFO:            lightgbm: 3.3.2
2022-10-02 16:55:05,924:INFO:               numba: 0.54.1
2022-10-02 16:55:05,924:INFO:            requests: 2.28.1
2022-10-02 16:55:05,924:INFO:          matplotlib: 3.5.3
2022-10-02 16:55:05,924:INFO:          scikitplot: 0.3.7
2022-10-02 16:55:05,924:INFO:         yellowbrick: 1.2.1
2022-10-02 16:55:05,924:INFO:              plotly: 5.10.0
2022-10-02 16:55:05,924:INFO:             kaleido: 0.2.1
2022-10-02 16:55:05,925:INFO:         statsmodels: 0.13.2
2022-10-02 16:55:05,925:INFO:              sktime: 0.13.4
2022-10-02 16:55:05,925:INFO:               tbats: 1.1.0
2022-10-02 16:55:05,925:INFO:            pmdarima: 1.8.5
2022-10-02 16:55:05,925:INFO:              psutil: 5.9.2
2022-10-02 16:55:05,925:INFO:PyCaret optional dependencies:
2022-10-02 16:55:05,925:INFO:                shap: Not installed
2022-10-02 16:55:05,925:INFO:           interpret: Not installed
2022-10-02 16:55:05,925:INFO:                umap: 0.5.3
2022-10-02 16:55:05,925:INFO:    pandas_profiling: 3.3.0
2022-10-02 16:55:05,925:INFO:  explainerdashboard: Not installed
2022-10-02 16:55:05,925:INFO:             autoviz: Not installed
2022-10-02 16:55:05,925:INFO:           fairlearn: Not installed
2022-10-02 16:55:05,925:INFO:             xgboost: Not installed
2022-10-02 16:55:05,925:INFO:            catboost: Not installed
2022-10-02 16:55:05,926:INFO:              kmodes: 0.12.2
2022-10-02 16:55:05,926:INFO:             mlxtend: 0.19.0
2022-10-02 16:55:05,926:INFO:       statsforecast: Not installed
2022-10-02 16:55:05,926:INFO:        tune_sklearn: Not installed
2022-10-02 16:55:05,926:INFO:                 ray: Not installed
2022-10-02 16:55:05,926:INFO:            hyperopt: Not installed
2022-10-02 16:55:05,926:INFO:              optuna: Not installed
2022-10-02 16:55:05,926:INFO:               skopt: Not installed
2022-10-02 16:55:05,926:INFO:              mlflow: 1.29.0
2022-10-02 16:55:05,926:INFO:              gradio: Not installed
2022-10-02 16:55:05,926:INFO:             fastapi: Not installed
2022-10-02 16:55:05,926:INFO:             uvicorn: Not installed
2022-10-02 16:55:05,926:INFO:              m2cgen: Not installed
2022-10-02 16:55:05,926:INFO:           evidently: Not installed
2022-10-02 16:55:05,926:INFO:                nltk: 3.7
2022-10-02 16:55:05,926:INFO:            pyLDAvis: 3.3.1
2022-10-02 16:55:05,926:INFO:              gensim: 3.8.3
2022-10-02 16:55:05,926:INFO:               spacy: 2.3.7
2022-10-02 16:55:05,927:INFO:           wordcloud: 1.8.2.2
2022-10-02 16:55:05,927:INFO:            textblob: 0.17.1
2022-10-02 16:55:05,927:INFO:               fugue: Not installed
2022-10-02 16:55:05,927:INFO:           streamlit: Not installed
2022-10-02 16:55:05,927:INFO:             prophet: Not installed
2022-10-02 16:55:05,927:INFO:None
2022-10-02 16:55:05,929:INFO:Set Forecast Horizon.
2022-10-02 16:55:05,929:INFO:Set up Train-Test Splits.
2022-10-02 16:55:06,025:INFO:Finished creating preprocessing pipeline.
2022-10-02 16:55:06,033:INFO:Pipeline: ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                DummyForecaster())]))])
2022-10-02 16:55:06,033:INFO:Set up Seasonal Period.
2022-10-02 16:55:06,033:INFO:Set up whether Multiplicative components allowed.
2022-10-02 16:55:06,089:INFO:Creating final display dataframe.
2022-10-02 16:55:06,097:INFO:Setup Display Container:                     Description                         Value
0                    session_id                             1
1                        Target  Number of airline passengers
2                      Approach                    Univariate
3           Exogenous Variables                   Not Present
4           Original data shape                      (144, 1)
5        Transformed data shape                      (144, 1)
6   Transformed train set shape                      (132, 1)
7    Transformed test set shape                       (12, 1)
8      Rows with missing values                          0.0%
9                Fold Generator       ExpandingWindowSplitter
10                  Fold Number                             3
11  Enforce Prediction Interval                         False
12    Seasonal Period(s) Tested                            12
13          Seasonality Present                          True
14       Seasonalities Detected                          [12]
15          Primary Seasonality                            12
16     Target Strictly Positive                          True
17           Target White Noise                            No
18                Recommended d                             1
19       Recommended Seasonal D                             1
20                   Preprocess                         False
21                     CPU Jobs                            -1
22                      Use GPU                         False
23               Log Experiment                         False
24              Experiment Name               ts-default-name
25                          USI                          8eea
2022-10-02 16:55:06,113:INFO:Engine successfully changes for model 'auto_arima' to 'pmdarima'.
2022-10-02 16:55:06,213:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,213:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,213:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,222:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,222:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,254:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,254:INFO:Engine for model 'lr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,254:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,262:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,262:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,262:INFO:Engine successfully changes for model 'lr_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,262:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,262:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,262:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,270:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,270:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,270:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,270:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,270:INFO:Engine for model 'en_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,270:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,278:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,278:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,278:INFO:Engine successfully changes for model 'en_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,286:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,286:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,286:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,294:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,294:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,294:INFO:Engine for model 'ridge_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,294:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,302:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,302:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,302:INFO:Engine successfully changes for model 'ridge_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,310:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,310:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,310:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,318:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,318:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,318:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,318:INFO:Engine for model 'lasso_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,318:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,326:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,326:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,326:INFO:Engine successfully changes for model 'lasso_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,326:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,326:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,334:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,334:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,342:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,342:INFO:Engine for model 'lar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,342:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,342:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,350:INFO:Engine successfully changes for model 'lar_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,350:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,350:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,350:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,358:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,358:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,358:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,358:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,358:INFO:Engine for model 'llar_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,358:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,366:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,366:INFO:Engine successfully changes for model 'llar_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,366:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,366:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,366:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,374:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,374:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,374:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,382:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,382:INFO:Engine for model 'br_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,382:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,390:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,390:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,390:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,390:INFO:Engine successfully changes for model 'br_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,390:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,390:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,390:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,398:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,398:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,398:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,398:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,398:INFO:Engine for model 'huber_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,398:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,406:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,406:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,406:INFO:Engine successfully changes for model 'huber_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,414:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,414:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,414:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,414:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,414:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,422:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,422:INFO:Engine for model 'par_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,425:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,434:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,434:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,434:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,434:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,434:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,435:INFO:Engine successfully changes for model 'par_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,438:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,438:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,438:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,438:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,438:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,446:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,446:INFO:Engine for model 'omp_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,446:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,454:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,454:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,454:INFO:Engine successfully changes for model 'omp_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,454:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,462:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,462:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,462:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,462:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,462:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,470:INFO:Engine for model 'knn_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,470:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,470:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,470:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,470:INFO:Engine successfully changes for model 'knn_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,470:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,478:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,478:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,486:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,486:INFO:Engine for model 'dt_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,486:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,486:INFO:Engine successfully changes for model 'dt_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,494:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,494:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,502:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,502:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,510:INFO:Engine for model 'rf_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,510:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,510:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,510:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,510:INFO:Engine successfully changes for model 'rf_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,518:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,518:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,518:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,518:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,518:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,518:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,518:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,526:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,526:INFO:Engine for model 'et_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,526:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,526:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,526:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,526:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,526:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,534:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,534:INFO:Engine successfully changes for model 'et_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,534:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,534:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,542:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,542:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,542:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,542:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,542:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,550:INFO:Engine for model 'gbr_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,550:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,550:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,550:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,550:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,550:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,550:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,550:INFO:Engine successfully changes for model 'gbr_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,550:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,558:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,558:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,558:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,558:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,558:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,567:INFO:Engine for model 'ada_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,567:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,567:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,567:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,567:INFO:Engine successfully changes for model 'ada_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,567:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,582:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,582:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,582:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,584:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,584:INFO:Engine for model 'xgboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,584:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,584:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,592:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,592:INFO:Engine successfully changes for model 'xgboost_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,592:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,600:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,600:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,608:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,608:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,608:INFO:Engine for model 'lightgbm_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,608:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,608:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,608:INFO:Engine successfully changes for model 'lightgbm_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,616:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,616:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,616:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,624:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,624:INFO:Engine for model 'catboost_cds_dt' has not been set explicitly, hence returning None.
2022-10-02 16:55:06,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,624:INFO:Engine successfully changes for model 'catboost_cds_dt' to 'sklearn'.
2022-10-02 16:55:06,624:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,642:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,642:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,642:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,648:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,648:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,656:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,664:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:55:06,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2022-10-02 16:55:06,726:INFO:setup() successfully completed in 0.78s...............
2022-10-02 16:58:49,304:INFO:Initializing compare_models()
2022-10-02 16:58:49,309:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2022-10-02 16:58:49,309:INFO:Checking exceptions
2022-10-02 16:58:49,313:INFO:Preparing display monitor
2022-10-02 16:58:49,410:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2022-10-02 16:58:49,410:INFO:Initializing Naive Forecaster
2022-10-02 16:58:49,410:INFO:Total runtime is 0.0 minutes
2022-10-02 16:58:49,418:INFO:SubProcess create_model() called ==================================
2022-10-02 16:58:49,418:INFO:Initializing create_model()
2022-10-02 16:58:49,418:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:58:49,418:INFO:Checking exceptions
2022-10-02 16:58:49,426:INFO:Importing libraries
2022-10-02 16:58:49,426:INFO:Copying training dataset
2022-10-02 16:58:49,434:INFO:Defining folds
2022-10-02 16:58:49,434:INFO:Declaring metric variables
2022-10-02 16:58:49,442:INFO:Importing untrained model
2022-10-02 16:58:49,450:INFO:Naive Forecaster Imported successfully
2022-10-02 16:58:49,474:INFO:Starting cross validation
2022-10-02 16:58:49,474:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:58:56,162:INFO:Calculating mean and std
2022-10-02 16:58:56,162:INFO:Creating metrics dataframe
2022-10-02 16:58:56,178:INFO:Uploading results into container
2022-10-02 16:58:56,178:INFO:Uploading model into container now
2022-10-02 16:58:56,186:INFO:master_model_container: 1
2022-10-02 16:58:56,186:INFO:display_container: 2
2022-10-02 16:58:56,186:INFO:NaiveForecaster()
2022-10-02 16:58:56,186:INFO:create_model() successfully completed......................................
2022-10-02 16:58:56,694:INFO:SubProcess create_model() end ==================================
2022-10-02 16:58:56,694:INFO:Creating metrics dataframe
2022-10-02 16:58:56,702:INFO:Initializing Grand Means Forecaster
2022-10-02 16:58:56,702:INFO:Total runtime is 0.1215364694595337 minutes
2022-10-02 16:58:56,712:INFO:SubProcess create_model() called ==================================
2022-10-02 16:58:56,712:INFO:Initializing create_model()
2022-10-02 16:58:56,712:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:58:56,712:INFO:Checking exceptions
2022-10-02 16:58:56,712:INFO:Importing libraries
2022-10-02 16:58:56,712:INFO:Copying training dataset
2022-10-02 16:58:56,719:INFO:Defining folds
2022-10-02 16:58:56,719:INFO:Declaring metric variables
2022-10-02 16:58:56,727:INFO:Importing untrained model
2022-10-02 16:58:56,727:INFO:Grand Means Forecaster Imported successfully
2022-10-02 16:58:56,751:INFO:Starting cross validation
2022-10-02 16:58:56,751:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:58:59,803:INFO:Calculating mean and std
2022-10-02 16:58:59,803:INFO:Creating metrics dataframe
2022-10-02 16:58:59,811:INFO:Uploading results into container
2022-10-02 16:58:59,811:INFO:Uploading model into container now
2022-10-02 16:58:59,811:INFO:master_model_container: 2
2022-10-02 16:58:59,811:INFO:display_container: 2
2022-10-02 16:58:59,811:INFO:NaiveForecaster(strategy='mean')
2022-10-02 16:58:59,811:INFO:create_model() successfully completed......................................
2022-10-02 16:59:00,011:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:00,011:INFO:Creating metrics dataframe
2022-10-02 16:59:00,019:INFO:Initializing Seasonal Naive Forecaster
2022-10-02 16:59:00,019:INFO:Total runtime is 0.1768203854560852 minutes
2022-10-02 16:59:00,027:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:00,027:INFO:Initializing create_model()
2022-10-02 16:59:00,027:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:00,027:INFO:Checking exceptions
2022-10-02 16:59:00,027:INFO:Importing libraries
2022-10-02 16:59:00,027:INFO:Copying training dataset
2022-10-02 16:59:00,035:INFO:Defining folds
2022-10-02 16:59:00,035:INFO:Declaring metric variables
2022-10-02 16:59:00,035:INFO:Importing untrained model
2022-10-02 16:59:00,043:INFO:Seasonal Naive Forecaster Imported successfully
2022-10-02 16:59:00,051:INFO:Starting cross validation
2022-10-02 16:59:00,059:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:03,204:INFO:Calculating mean and std
2022-10-02 16:59:03,204:INFO:Creating metrics dataframe
2022-10-02 16:59:03,212:INFO:Uploading results into container
2022-10-02 16:59:03,212:INFO:Uploading model into container now
2022-10-02 16:59:03,212:INFO:master_model_container: 3
2022-10-02 16:59:03,212:INFO:display_container: 2
2022-10-02 16:59:03,212:INFO:NaiveForecaster(sp=12)
2022-10-02 16:59:03,212:INFO:create_model() successfully completed......................................
2022-10-02 16:59:03,420:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:03,420:INFO:Creating metrics dataframe
2022-10-02 16:59:03,436:INFO:Initializing Polynomial Trend Forecaster
2022-10-02 16:59:03,436:INFO:Total runtime is 0.2337671875953674 minutes
2022-10-02 16:59:03,436:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:03,436:INFO:Initializing create_model()
2022-10-02 16:59:03,436:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:03,436:INFO:Checking exceptions
2022-10-02 16:59:03,436:INFO:Importing libraries
2022-10-02 16:59:03,436:INFO:Copying training dataset
2022-10-02 16:59:03,444:INFO:Defining folds
2022-10-02 16:59:03,444:INFO:Declaring metric variables
2022-10-02 16:59:03,452:INFO:Importing untrained model
2022-10-02 16:59:03,452:INFO:Polynomial Trend Forecaster Imported successfully
2022-10-02 16:59:03,460:INFO:Starting cross validation
2022-10-02 16:59:03,468:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:06,476:INFO:Calculating mean and std
2022-10-02 16:59:06,484:INFO:Creating metrics dataframe
2022-10-02 16:59:06,492:INFO:Uploading results into container
2022-10-02 16:59:06,492:INFO:Uploading model into container now
2022-10-02 16:59:06,492:INFO:master_model_container: 4
2022-10-02 16:59:06,492:INFO:display_container: 2
2022-10-02 16:59:06,492:INFO:PolynomialTrendForecaster()
2022-10-02 16:59:06,492:INFO:create_model() successfully completed......................................
2022-10-02 16:59:06,676:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:06,676:INFO:Creating metrics dataframe
2022-10-02 16:59:06,692:INFO:Initializing ARIMA
2022-10-02 16:59:06,692:INFO:Total runtime is 0.2880371570587158 minutes
2022-10-02 16:59:06,700:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:06,700:INFO:Initializing create_model()
2022-10-02 16:59:06,700:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:06,700:INFO:Checking exceptions
2022-10-02 16:59:06,700:INFO:Importing libraries
2022-10-02 16:59:06,700:INFO:Copying training dataset
2022-10-02 16:59:06,700:INFO:Defining folds
2022-10-02 16:59:06,700:INFO:Declaring metric variables
2022-10-02 16:59:06,708:INFO:Importing untrained model
2022-10-02 16:59:06,716:INFO:ARIMA Imported successfully
2022-10-02 16:59:06,724:INFO:Starting cross validation
2022-10-02 16:59:06,724:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:10,087:INFO:Calculating mean and std
2022-10-02 16:59:10,095:INFO:Creating metrics dataframe
2022-10-02 16:59:10,095:INFO:Uploading results into container
2022-10-02 16:59:10,095:INFO:Uploading model into container now
2022-10-02 16:59:10,095:INFO:master_model_container: 5
2022-10-02 16:59:10,095:INFO:display_container: 2
2022-10-02 16:59:10,095:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2022-10-02 16:59:10,103:INFO:create_model() successfully completed......................................
2022-10-02 16:59:10,300:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:10,300:INFO:Creating metrics dataframe
2022-10-02 16:59:10,308:INFO:Initializing Auto ARIMA
2022-10-02 16:59:10,308:INFO:Total runtime is 0.34830750624338785 minutes
2022-10-02 16:59:10,316:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:10,316:INFO:Initializing create_model()
2022-10-02 16:59:10,316:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:10,316:INFO:Checking exceptions
2022-10-02 16:59:10,316:INFO:Importing libraries
2022-10-02 16:59:10,316:INFO:Copying training dataset
2022-10-02 16:59:10,324:INFO:Defining folds
2022-10-02 16:59:10,324:INFO:Declaring metric variables
2022-10-02 16:59:10,332:INFO:Importing untrained model
2022-10-02 16:59:10,332:INFO:Auto ARIMA Imported successfully
2022-10-02 16:59:10,349:INFO:Starting cross validation
2022-10-02 16:59:10,349:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:21,574:INFO:Calculating mean and std
2022-10-02 16:59:21,575:INFO:Creating metrics dataframe
2022-10-02 16:59:21,575:INFO:Uploading results into container
2022-10-02 16:59:21,575:INFO:Uploading model into container now
2022-10-02 16:59:21,575:INFO:master_model_container: 6
2022-10-02 16:59:21,583:INFO:display_container: 2
2022-10-02 16:59:21,583:INFO:AutoARIMA(random_state=1, sp=12, suppress_warnings=True)
2022-10-02 16:59:21,584:INFO:create_model() successfully completed......................................
2022-10-02 16:59:21,758:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:21,758:INFO:Creating metrics dataframe
2022-10-02 16:59:21,774:INFO:Initializing Exponential Smoothing
2022-10-02 16:59:21,782:INFO:Total runtime is 0.5395286719004313 minutes
2022-10-02 16:59:21,782:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:21,782:INFO:Initializing create_model()
2022-10-02 16:59:21,782:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:21,782:INFO:Checking exceptions
2022-10-02 16:59:21,782:INFO:Importing libraries
2022-10-02 16:59:21,782:INFO:Copying training dataset
2022-10-02 16:59:21,791:INFO:Defining folds
2022-10-02 16:59:21,791:INFO:Declaring metric variables
2022-10-02 16:59:21,791:INFO:Importing untrained model
2022-10-02 16:59:21,799:INFO:Exponential Smoothing Imported successfully
2022-10-02 16:59:21,815:INFO:Starting cross validation
2022-10-02 16:59:21,815:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:22,082:INFO:Calculating mean and std
2022-10-02 16:59:22,082:INFO:Creating metrics dataframe
2022-10-02 16:59:22,082:INFO:Uploading results into container
2022-10-02 16:59:22,082:INFO:Uploading model into container now
2022-10-02 16:59:22,082:INFO:master_model_container: 7
2022-10-02 16:59:22,082:INFO:display_container: 2
2022-10-02 16:59:22,082:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2022-10-02 16:59:22,082:INFO:create_model() successfully completed......................................
2022-10-02 16:59:22,266:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:22,266:INFO:Creating metrics dataframe
2022-10-02 16:59:22,283:INFO:Initializing Croston
2022-10-02 16:59:22,283:INFO:Total runtime is 0.5478798985481262 minutes
2022-10-02 16:59:22,283:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:22,283:INFO:Initializing create_model()
2022-10-02 16:59:22,283:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:22,283:INFO:Checking exceptions
2022-10-02 16:59:22,283:INFO:Importing libraries
2022-10-02 16:59:22,283:INFO:Copying training dataset
2022-10-02 16:59:22,291:INFO:Defining folds
2022-10-02 16:59:22,291:INFO:Declaring metric variables
2022-10-02 16:59:22,299:INFO:Importing untrained model
2022-10-02 16:59:22,307:INFO:Croston Imported successfully
2022-10-02 16:59:22,323:INFO:Starting cross validation
2022-10-02 16:59:22,331:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:22,395:INFO:Calculating mean and std
2022-10-02 16:59:22,395:INFO:Creating metrics dataframe
2022-10-02 16:59:22,403:INFO:Uploading results into container
2022-10-02 16:59:22,403:INFO:Uploading model into container now
2022-10-02 16:59:22,403:INFO:master_model_container: 8
2022-10-02 16:59:22,403:INFO:display_container: 2
2022-10-02 16:59:22,403:INFO:Croston()
2022-10-02 16:59:22,403:INFO:create_model() successfully completed......................................
2022-10-02 16:59:22,590:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:22,590:INFO:Creating metrics dataframe
2022-10-02 16:59:22,598:INFO:Initializing ETS
2022-10-02 16:59:22,598:INFO:Total runtime is 0.5531364321708679 minutes
2022-10-02 16:59:22,609:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:22,609:INFO:Initializing create_model()
2022-10-02 16:59:22,609:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:22,609:INFO:Checking exceptions
2022-10-02 16:59:22,609:INFO:Importing libraries
2022-10-02 16:59:22,609:INFO:Copying training dataset
2022-10-02 16:59:22,614:INFO:Defining folds
2022-10-02 16:59:22,614:INFO:Declaring metric variables
2022-10-02 16:59:22,614:INFO:Importing untrained model
2022-10-02 16:59:22,624:INFO:ETS Imported successfully
2022-10-02 16:59:22,632:INFO:Starting cross validation
2022-10-02 16:59:22,632:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:23,008:INFO:Calculating mean and std
2022-10-02 16:59:23,016:INFO:Creating metrics dataframe
2022-10-02 16:59:23,016:INFO:Uploading results into container
2022-10-02 16:59:23,016:INFO:Uploading model into container now
2022-10-02 16:59:23,016:INFO:master_model_container: 9
2022-10-02 16:59:23,016:INFO:display_container: 2
2022-10-02 16:59:23,024:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 16:59:23,024:INFO:create_model() successfully completed......................................
2022-10-02 16:59:23,217:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:23,217:INFO:Creating metrics dataframe
2022-10-02 16:59:23,234:INFO:Initializing Theta Forecaster
2022-10-02 16:59:23,234:INFO:Total runtime is 0.5637274901072185 minutes
2022-10-02 16:59:23,242:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:23,242:INFO:Initializing create_model()
2022-10-02 16:59:23,242:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:23,242:INFO:Checking exceptions
2022-10-02 16:59:23,242:INFO:Importing libraries
2022-10-02 16:59:23,242:INFO:Copying training dataset
2022-10-02 16:59:23,242:INFO:Defining folds
2022-10-02 16:59:23,242:INFO:Declaring metric variables
2022-10-02 16:59:23,250:INFO:Importing untrained model
2022-10-02 16:59:23,258:INFO:Theta Forecaster Imported successfully
2022-10-02 16:59:23,266:INFO:Starting cross validation
2022-10-02 16:59:23,266:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:23,363:INFO:Calculating mean and std
2022-10-02 16:59:23,363:INFO:Creating metrics dataframe
2022-10-02 16:59:23,370:INFO:Uploading results into container
2022-10-02 16:59:23,370:INFO:Uploading model into container now
2022-10-02 16:59:23,370:INFO:master_model_container: 10
2022-10-02 16:59:23,370:INFO:display_container: 2
2022-10-02 16:59:23,370:INFO:ThetaForecaster(sp=12)
2022-10-02 16:59:23,370:INFO:create_model() successfully completed......................................
2022-10-02 16:59:23,563:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:23,563:INFO:Creating metrics dataframe
2022-10-02 16:59:23,579:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:23,579:INFO:Total runtime is 0.5694793621699016 minutes
2022-10-02 16:59:23,579:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:23,579:INFO:Initializing create_model()
2022-10-02 16:59:23,579:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:23,579:INFO:Checking exceptions
2022-10-02 16:59:23,579:INFO:Importing libraries
2022-10-02 16:59:23,579:INFO:Copying training dataset
2022-10-02 16:59:23,587:INFO:Defining folds
2022-10-02 16:59:23,587:INFO:Declaring metric variables
2022-10-02 16:59:23,595:INFO:Importing untrained model
2022-10-02 16:59:23,603:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:23,611:INFO:Starting cross validation
2022-10-02 16:59:23,611:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:23,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,893:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,896:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:23,944:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:23,944:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:23,952:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:24,058:INFO:Calculating mean and std
2022-10-02 16:59:24,066:INFO:Creating metrics dataframe
2022-10-02 16:59:24,066:INFO:Uploading results into container
2022-10-02 16:59:24,066:INFO:Uploading model into container now
2022-10-02 16:59:24,066:INFO:master_model_container: 11
2022-10-02 16:59:24,066:INFO:display_container: 2
2022-10-02 16:59:24,066:INFO:BaseCdsDtForecaster(regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2022-10-02 16:59:24,066:INFO:create_model() successfully completed......................................
2022-10-02 16:59:24,242:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:24,242:INFO:Creating metrics dataframe
2022-10-02 16:59:24,258:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:24,258:INFO:Total runtime is 0.580801781018575 minutes
2022-10-02 16:59:24,266:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:24,266:INFO:Initializing create_model()
2022-10-02 16:59:24,266:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:24,266:INFO:Checking exceptions
2022-10-02 16:59:24,266:INFO:Importing libraries
2022-10-02 16:59:24,266:INFO:Copying training dataset
2022-10-02 16:59:24,266:INFO:Defining folds
2022-10-02 16:59:24,266:INFO:Declaring metric variables
2022-10-02 16:59:24,274:INFO:Importing untrained model
2022-10-02 16:59:24,282:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:24,290:INFO:Starting cross validation
2022-10-02 16:59:24,290:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,565:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:24,607:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:24,615:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:24,615:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:24,715:INFO:Calculating mean and std
2022-10-02 16:59:24,715:INFO:Creating metrics dataframe
2022-10-02 16:59:24,725:INFO:Uploading results into container
2022-10-02 16:59:24,725:INFO:Uploading model into container now
2022-10-02 16:59:24,725:INFO:master_model_container: 12
2022-10-02 16:59:24,725:INFO:display_container: 2
2022-10-02 16:59:24,725:INFO:BaseCdsDtForecaster(regressor=ElasticNet(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:24,725:INFO:create_model() successfully completed......................................
2022-10-02 16:59:24,899:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:24,899:INFO:Creating metrics dataframe
2022-10-02 16:59:24,917:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:24,917:INFO:Total runtime is 0.5917792598406474 minutes
2022-10-02 16:59:24,925:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:24,925:INFO:Initializing create_model()
2022-10-02 16:59:24,925:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:24,925:INFO:Checking exceptions
2022-10-02 16:59:24,925:INFO:Importing libraries
2022-10-02 16:59:24,925:INFO:Copying training dataset
2022-10-02 16:59:24,925:INFO:Defining folds
2022-10-02 16:59:24,933:INFO:Declaring metric variables
2022-10-02 16:59:24,933:INFO:Importing untrained model
2022-10-02 16:59:24,941:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:24,958:INFO:Starting cross validation
2022-10-02 16:59:24,958:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:25,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,232:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,274:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:25,290:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:25,290:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:25,380:INFO:Calculating mean and std
2022-10-02 16:59:25,388:INFO:Creating metrics dataframe
2022-10-02 16:59:25,388:INFO:Uploading results into container
2022-10-02 16:59:25,388:INFO:Uploading model into container now
2022-10-02 16:59:25,388:INFO:master_model_container: 13
2022-10-02 16:59:25,388:INFO:display_container: 2
2022-10-02 16:59:25,396:INFO:BaseCdsDtForecaster(regressor=Ridge(random_state=1), sp=12, window_length=12)
2022-10-02 16:59:25,396:INFO:create_model() successfully completed......................................
2022-10-02 16:59:25,559:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:25,559:INFO:Creating metrics dataframe
2022-10-02 16:59:25,575:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:25,575:INFO:Total runtime is 0.6027423540751139 minutes
2022-10-02 16:59:25,575:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:25,583:INFO:Initializing create_model()
2022-10-02 16:59:25,583:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:25,583:INFO:Checking exceptions
2022-10-02 16:59:25,583:INFO:Importing libraries
2022-10-02 16:59:25,583:INFO:Copying training dataset
2022-10-02 16:59:25,583:INFO:Defining folds
2022-10-02 16:59:25,583:INFO:Declaring metric variables
2022-10-02 16:59:25,591:INFO:Importing untrained model
2022-10-02 16:59:25,599:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:25,607:INFO:Starting cross validation
2022-10-02 16:59:25,607:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:25,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,877:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,882:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:25,924:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:25,932:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:25,939:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:26,033:INFO:Calculating mean and std
2022-10-02 16:59:26,041:INFO:Creating metrics dataframe
2022-10-02 16:59:26,041:INFO:Uploading results into container
2022-10-02 16:59:26,041:INFO:Uploading model into container now
2022-10-02 16:59:26,041:INFO:master_model_container: 14
2022-10-02 16:59:26,041:INFO:display_container: 2
2022-10-02 16:59:26,041:INFO:BaseCdsDtForecaster(regressor=Lasso(random_state=1), sp=12, window_length=12)
2022-10-02 16:59:26,041:INFO:create_model() successfully completed......................................
2022-10-02 16:59:26,216:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:26,216:INFO:Creating metrics dataframe
2022-10-02 16:59:26,232:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:26,232:INFO:Total runtime is 0.6136977910995483 minutes
2022-10-02 16:59:26,232:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:26,232:INFO:Initializing create_model()
2022-10-02 16:59:26,232:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:26,232:INFO:Checking exceptions
2022-10-02 16:59:26,241:INFO:Importing libraries
2022-10-02 16:59:26,241:INFO:Copying training dataset
2022-10-02 16:59:26,241:INFO:Defining folds
2022-10-02 16:59:26,241:INFO:Declaring metric variables
2022-10-02 16:59:26,248:INFO:Importing untrained model
2022-10-02 16:59:26,256:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:26,264:INFO:Starting cross validation
2022-10-02 16:59:26,264:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:26,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,539:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,547:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:26,595:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:26,595:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:26,595:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:26,659:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 16:59:26,667:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 16:59:26,675:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 16:59:26,707:INFO:Calculating mean and std
2022-10-02 16:59:26,707:INFO:Creating metrics dataframe
2022-10-02 16:59:26,707:INFO:Uploading results into container
2022-10-02 16:59:26,707:INFO:Uploading model into container now
2022-10-02 16:59:26,707:INFO:master_model_container: 15
2022-10-02 16:59:26,707:INFO:display_container: 2
2022-10-02 16:59:26,707:INFO:BaseCdsDtForecaster(regressor=Lars(random_state=1), sp=12, window_length=12)
2022-10-02 16:59:26,707:INFO:create_model() successfully completed......................................
2022-10-02 16:59:26,882:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:26,882:INFO:Creating metrics dataframe
2022-10-02 16:59:26,899:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:26,899:INFO:Total runtime is 0.6248122731844583 minutes
2022-10-02 16:59:26,907:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:26,907:INFO:Initializing create_model()
2022-10-02 16:59:26,907:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:26,907:INFO:Checking exceptions
2022-10-02 16:59:26,907:INFO:Importing libraries
2022-10-02 16:59:26,907:INFO:Copying training dataset
2022-10-02 16:59:26,907:INFO:Defining folds
2022-10-02 16:59:26,907:INFO:Declaring metric variables
2022-10-02 16:59:26,915:INFO:Importing untrained model
2022-10-02 16:59:26,923:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:26,931:INFO:Starting cross validation
2022-10-02 16:59:26,931:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:27,038:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-02 16:59:27,041:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-02 16:59:27,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:27,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:27,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:27,215:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 16:59:27,281:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 16:59:27,382:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-02 16:59:27,407:INFO:Calculating mean and std
2022-10-02 16:59:27,407:INFO:Creating metrics dataframe
2022-10-02 16:59:27,407:INFO:Uploading results into container
2022-10-02 16:59:27,407:INFO:Uploading model into container now
2022-10-02 16:59:27,415:INFO:master_model_container: 16
2022-10-02 16:59:27,415:INFO:display_container: 2
2022-10-02 16:59:27,415:INFO:BaseCdsDtForecaster(regressor=LassoLars(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:27,415:INFO:create_model() successfully completed......................................
2022-10-02 16:59:27,576:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:27,576:INFO:Creating metrics dataframe
2022-10-02 16:59:27,600:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:27,600:INFO:Total runtime is 0.6365025917689004 minutes
2022-10-02 16:59:27,608:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:27,608:INFO:Initializing create_model()
2022-10-02 16:59:27,608:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:27,608:INFO:Checking exceptions
2022-10-02 16:59:27,608:INFO:Importing libraries
2022-10-02 16:59:27,608:INFO:Copying training dataset
2022-10-02 16:59:27,608:INFO:Defining folds
2022-10-02 16:59:27,608:INFO:Declaring metric variables
2022-10-02 16:59:27,616:INFO:Importing untrained model
2022-10-02 16:59:27,624:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:27,632:INFO:Starting cross validation
2022-10-02 16:59:27,632:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:27,765:INFO:Calculating mean and std
2022-10-02 16:59:27,765:INFO:Creating metrics dataframe
2022-10-02 16:59:27,773:INFO:Uploading results into container
2022-10-02 16:59:27,773:INFO:Uploading model into container now
2022-10-02 16:59:27,773:INFO:master_model_container: 17
2022-10-02 16:59:27,773:INFO:display_container: 2
2022-10-02 16:59:27,773:INFO:BaseCdsDtForecaster(regressor=BayesianRidge(), sp=12, window_length=12)
2022-10-02 16:59:27,773:INFO:create_model() successfully completed......................................
2022-10-02 16:59:27,941:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:27,941:INFO:Creating metrics dataframe
2022-10-02 16:59:27,957:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:27,957:INFO:Total runtime is 0.6424422025680541 minutes
2022-10-02 16:59:27,965:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:27,965:INFO:Initializing create_model()
2022-10-02 16:59:27,965:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:27,965:INFO:Checking exceptions
2022-10-02 16:59:27,965:INFO:Importing libraries
2022-10-02 16:59:27,965:INFO:Copying training dataset
2022-10-02 16:59:27,974:INFO:Defining folds
2022-10-02 16:59:27,974:INFO:Declaring metric variables
2022-10-02 16:59:27,981:INFO:Importing untrained model
2022-10-02 16:59:27,981:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:27,997:INFO:Starting cross validation
2022-10-02 16:59:27,997:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:28,133:INFO:Calculating mean and std
2022-10-02 16:59:28,133:INFO:Creating metrics dataframe
2022-10-02 16:59:28,141:INFO:Uploading results into container
2022-10-02 16:59:28,141:INFO:Uploading model into container now
2022-10-02 16:59:28,141:INFO:master_model_container: 18
2022-10-02 16:59:28,141:INFO:display_container: 2
2022-10-02 16:59:28,141:INFO:BaseCdsDtForecaster(regressor=HuberRegressor(), sp=12, window_length=12)
2022-10-02 16:59:28,141:INFO:create_model() successfully completed......................................
2022-10-02 16:59:28,308:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:28,308:INFO:Creating metrics dataframe
2022-10-02 16:59:28,332:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:28,332:INFO:Total runtime is 0.6486938476562498 minutes
2022-10-02 16:59:28,332:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:28,332:INFO:Initializing create_model()
2022-10-02 16:59:28,332:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:28,332:INFO:Checking exceptions
2022-10-02 16:59:28,340:INFO:Importing libraries
2022-10-02 16:59:28,340:INFO:Copying training dataset
2022-10-02 16:59:28,341:INFO:Defining folds
2022-10-02 16:59:28,341:INFO:Declaring metric variables
2022-10-02 16:59:28,341:INFO:Importing untrained model
2022-10-02 16:59:28,349:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:28,357:INFO:Starting cross validation
2022-10-02 16:59:28,365:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:28,485:INFO:Calculating mean and std
2022-10-02 16:59:28,493:INFO:Creating metrics dataframe
2022-10-02 16:59:28,493:INFO:Uploading results into container
2022-10-02 16:59:28,493:INFO:Uploading model into container now
2022-10-02 16:59:28,493:INFO:master_model_container: 19
2022-10-02 16:59:28,493:INFO:display_container: 2
2022-10-02 16:59:28,493:INFO:BaseCdsDtForecaster(regressor=PassiveAggressiveRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:28,493:INFO:create_model() successfully completed......................................
2022-10-02 16:59:28,663:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:28,663:INFO:Creating metrics dataframe
2022-10-02 16:59:28,687:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:28,687:INFO:Total runtime is 0.6546139995257058 minutes
2022-10-02 16:59:28,695:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:28,695:INFO:Initializing create_model()
2022-10-02 16:59:28,695:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:28,695:INFO:Checking exceptions
2022-10-02 16:59:28,695:INFO:Importing libraries
2022-10-02 16:59:28,695:INFO:Copying training dataset
2022-10-02 16:59:28,695:INFO:Defining folds
2022-10-02 16:59:28,695:INFO:Declaring metric variables
2022-10-02 16:59:28,705:INFO:Importing untrained model
2022-10-02 16:59:28,711:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:28,719:INFO:Starting cross validation
2022-10-02 16:59:28,719:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:28,815:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 16:59:28,815:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 16:59:28,825:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 16:59:28,849:INFO:Calculating mean and std
2022-10-02 16:59:28,849:INFO:Creating metrics dataframe
2022-10-02 16:59:28,857:INFO:Uploading results into container
2022-10-02 16:59:28,857:INFO:Uploading model into container now
2022-10-02 16:59:28,857:INFO:master_model_container: 20
2022-10-02 16:59:28,857:INFO:display_container: 2
2022-10-02 16:59:28,857:INFO:BaseCdsDtForecaster(regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2022-10-02 16:59:28,857:INFO:create_model() successfully completed......................................
2022-10-02 16:59:29,024:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:29,024:INFO:Creating metrics dataframe
2022-10-02 16:59:29,041:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:29,041:INFO:Total runtime is 0.660519727071126 minutes
2022-10-02 16:59:29,049:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:29,049:INFO:Initializing create_model()
2022-10-02 16:59:29,049:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:29,049:INFO:Checking exceptions
2022-10-02 16:59:29,049:INFO:Importing libraries
2022-10-02 16:59:29,049:INFO:Copying training dataset
2022-10-02 16:59:29,057:INFO:Defining folds
2022-10-02 16:59:29,057:INFO:Declaring metric variables
2022-10-02 16:59:29,057:INFO:Importing untrained model
2022-10-02 16:59:29,065:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:29,074:INFO:Starting cross validation
2022-10-02 16:59:29,082:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:29,323:INFO:Calculating mean and std
2022-10-02 16:59:29,331:INFO:Creating metrics dataframe
2022-10-02 16:59:29,339:INFO:Uploading results into container
2022-10-02 16:59:29,339:INFO:Uploading model into container now
2022-10-02 16:59:29,340:INFO:master_model_container: 21
2022-10-02 16:59:29,341:INFO:display_container: 2
2022-10-02 16:59:29,342:INFO:BaseCdsDtForecaster(regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2022-10-02 16:59:29,342:INFO:create_model() successfully completed......................................
2022-10-02 16:59:29,507:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:29,507:INFO:Creating metrics dataframe
2022-10-02 16:59:29,524:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:29,524:INFO:Total runtime is 0.6685662627220151 minutes
2022-10-02 16:59:29,531:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:29,531:INFO:Initializing create_model()
2022-10-02 16:59:29,531:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:29,531:INFO:Checking exceptions
2022-10-02 16:59:29,532:INFO:Importing libraries
2022-10-02 16:59:29,532:INFO:Copying training dataset
2022-10-02 16:59:29,532:INFO:Defining folds
2022-10-02 16:59:29,532:INFO:Declaring metric variables
2022-10-02 16:59:29,539:INFO:Importing untrained model
2022-10-02 16:59:29,547:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:29,555:INFO:Starting cross validation
2022-10-02 16:59:29,555:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:29,691:INFO:Calculating mean and std
2022-10-02 16:59:29,691:INFO:Creating metrics dataframe
2022-10-02 16:59:29,707:INFO:Uploading results into container
2022-10-02 16:59:29,707:INFO:Uploading model into container now
2022-10-02 16:59:29,707:INFO:master_model_container: 22
2022-10-02 16:59:29,707:INFO:display_container: 2
2022-10-02 16:59:29,707:INFO:BaseCdsDtForecaster(regressor=DecisionTreeRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:29,707:INFO:create_model() successfully completed......................................
2022-10-02 16:59:29,882:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:29,882:INFO:Creating metrics dataframe
2022-10-02 16:59:29,907:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:29,907:INFO:Total runtime is 0.6749470710754392 minutes
2022-10-02 16:59:29,907:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:29,907:INFO:Initializing create_model()
2022-10-02 16:59:29,907:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:29,907:INFO:Checking exceptions
2022-10-02 16:59:29,907:INFO:Importing libraries
2022-10-02 16:59:29,907:INFO:Copying training dataset
2022-10-02 16:59:29,915:INFO:Defining folds
2022-10-02 16:59:29,915:INFO:Declaring metric variables
2022-10-02 16:59:29,923:INFO:Importing untrained model
2022-10-02 16:59:29,923:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:29,939:INFO:Starting cross validation
2022-10-02 16:59:29,939:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:30,489:INFO:Calculating mean and std
2022-10-02 16:59:30,489:INFO:Creating metrics dataframe
2022-10-02 16:59:30,497:INFO:Uploading results into container
2022-10-02 16:59:30,497:INFO:Uploading model into container now
2022-10-02 16:59:30,497:INFO:master_model_container: 23
2022-10-02 16:59:30,497:INFO:display_container: 2
2022-10-02 16:59:30,497:INFO:BaseCdsDtForecaster(regressor=RandomForestRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 16:59:30,497:INFO:create_model() successfully completed......................................
2022-10-02 16:59:30,775:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:30,775:INFO:Creating metrics dataframe
2022-10-02 16:59:30,831:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:30,831:INFO:Total runtime is 0.6903513828913368 minutes
2022-10-02 16:59:30,848:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:30,848:INFO:Initializing create_model()
2022-10-02 16:59:30,848:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:30,848:INFO:Checking exceptions
2022-10-02 16:59:30,848:INFO:Importing libraries
2022-10-02 16:59:30,856:INFO:Copying training dataset
2022-10-02 16:59:30,864:INFO:Defining folds
2022-10-02 16:59:30,864:INFO:Declaring metric variables
2022-10-02 16:59:30,864:INFO:Importing untrained model
2022-10-02 16:59:30,872:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:30,880:INFO:Starting cross validation
2022-10-02 16:59:30,888:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:31,366:INFO:Calculating mean and std
2022-10-02 16:59:31,366:INFO:Creating metrics dataframe
2022-10-02 16:59:31,374:INFO:Uploading results into container
2022-10-02 16:59:31,374:INFO:Uploading model into container now
2022-10-02 16:59:31,374:INFO:master_model_container: 24
2022-10-02 16:59:31,374:INFO:display_container: 2
2022-10-02 16:59:31,374:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 16:59:31,374:INFO:create_model() successfully completed......................................
2022-10-02 16:59:31,540:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:31,540:INFO:Creating metrics dataframe
2022-10-02 16:59:31,557:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:31,557:INFO:Total runtime is 0.7024529139200844 minutes
2022-10-02 16:59:31,565:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:31,565:INFO:Initializing create_model()
2022-10-02 16:59:31,565:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:31,565:INFO:Checking exceptions
2022-10-02 16:59:31,565:INFO:Importing libraries
2022-10-02 16:59:31,565:INFO:Copying training dataset
2022-10-02 16:59:31,573:INFO:Defining folds
2022-10-02 16:59:31,573:INFO:Declaring metric variables
2022-10-02 16:59:31,581:INFO:Importing untrained model
2022-10-02 16:59:31,581:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:31,597:INFO:Starting cross validation
2022-10-02 16:59:31,597:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:31,765:INFO:Calculating mean and std
2022-10-02 16:59:31,774:INFO:Creating metrics dataframe
2022-10-02 16:59:31,774:INFO:Uploading results into container
2022-10-02 16:59:31,774:INFO:Uploading model into container now
2022-10-02 16:59:31,774:INFO:master_model_container: 25
2022-10-02 16:59:31,774:INFO:display_container: 2
2022-10-02 16:59:31,774:INFO:BaseCdsDtForecaster(regressor=GradientBoostingRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:31,774:INFO:create_model() successfully completed......................................
2022-10-02 16:59:31,947:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:31,947:INFO:Creating metrics dataframe
2022-10-02 16:59:31,973:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:31,973:INFO:Total runtime is 0.7093895991643268 minutes
2022-10-02 16:59:31,973:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:31,981:INFO:Initializing create_model()
2022-10-02 16:59:31,981:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:31,981:INFO:Checking exceptions
2022-10-02 16:59:31,981:INFO:Importing libraries
2022-10-02 16:59:31,981:INFO:Copying training dataset
2022-10-02 16:59:31,981:INFO:Defining folds
2022-10-02 16:59:31,981:INFO:Declaring metric variables
2022-10-02 16:59:31,989:INFO:Importing untrained model
2022-10-02 16:59:31,997:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:32,005:INFO:Starting cross validation
2022-10-02 16:59:32,005:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:32,240:INFO:Calculating mean and std
2022-10-02 16:59:32,248:INFO:Creating metrics dataframe
2022-10-02 16:59:32,248:INFO:Uploading results into container
2022-10-02 16:59:32,248:INFO:Uploading model into container now
2022-10-02 16:59:32,248:INFO:master_model_container: 26
2022-10-02 16:59:32,256:INFO:display_container: 2
2022-10-02 16:59:32,256:INFO:BaseCdsDtForecaster(regressor=AdaBoostRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:32,256:INFO:create_model() successfully completed......................................
2022-10-02 16:59:32,423:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:32,423:INFO:Creating metrics dataframe
2022-10-02 16:59:32,447:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2022-10-02 16:59:32,447:INFO:Total runtime is 0.7172844648361204 minutes
2022-10-02 16:59:32,447:INFO:SubProcess create_model() called ==================================
2022-10-02 16:59:32,447:INFO:Initializing create_model()
2022-10-02 16:59:32,447:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019037A2FB80>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:32,447:INFO:Checking exceptions
2022-10-02 16:59:32,447:INFO:Importing libraries
2022-10-02 16:59:32,447:INFO:Copying training dataset
2022-10-02 16:59:32,457:INFO:Defining folds
2022-10-02 16:59:32,457:INFO:Declaring metric variables
2022-10-02 16:59:32,457:INFO:Importing untrained model
2022-10-02 16:59:32,465:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 16:59:32,473:INFO:Starting cross validation
2022-10-02 16:59:32,481:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 16:59:32,633:INFO:Calculating mean and std
2022-10-02 16:59:32,633:INFO:Creating metrics dataframe
2022-10-02 16:59:32,641:INFO:Uploading results into container
2022-10-02 16:59:32,641:INFO:Uploading model into container now
2022-10-02 16:59:32,641:INFO:master_model_container: 27
2022-10-02 16:59:32,641:INFO:display_container: 2
2022-10-02 16:59:32,641:INFO:BaseCdsDtForecaster(regressor=LGBMRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 16:59:32,641:INFO:create_model() successfully completed......................................
2022-10-02 16:59:32,824:INFO:SubProcess create_model() end ==================================
2022-10-02 16:59:32,824:INFO:Creating metrics dataframe
2022-10-02 16:59:32,857:INFO:Initializing create_model()
2022-10-02 16:59:32,857:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 16:59:32,857:INFO:Checking exceptions
2022-10-02 16:59:32,865:INFO:Importing libraries
2022-10-02 16:59:32,865:INFO:Copying training dataset
2022-10-02 16:59:32,865:INFO:Defining folds
2022-10-02 16:59:32,865:INFO:Declaring metric variables
2022-10-02 16:59:32,873:INFO:Importing untrained model
2022-10-02 16:59:32,873:INFO:Declaring custom model
2022-10-02 16:59:32,873:INFO:Exponential Smoothing Imported successfully
2022-10-02 16:59:32,873:INFO:Cross validation set to False
2022-10-02 16:59:32,873:INFO:Fitting Model
2022-10-02 16:59:33,025:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2022-10-02 16:59:33,025:INFO:create_model() successfully completed......................................
2022-10-02 16:59:33,265:INFO:master_model_container: 27
2022-10-02 16:59:33,265:INFO:display_container: 2
2022-10-02 16:59:33,265:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2022-10-02 16:59:33,265:INFO:compare_models() successfully completed......................................
2022-10-02 17:02:11,847:INFO:Initializing compare_models()
2022-10-02 17:02:11,847:INFO:compare_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, include=None, fold=None, round=4, cross_validation=True, sort=MAPE, n_select=3, budget_time=None, turbo=False, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'MAPE', 'n_select': 3, 'budget_time': None, 'turbo': False, 'errors': 'ignore', 'fit_kwargs': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.time_series.forecasting.oop.TSForecastingExperiment'>}, exclude=None)
2022-10-02 17:02:11,847:INFO:Checking exceptions
2022-10-02 17:02:11,855:INFO:Preparing display monitor
2022-10-02 17:02:11,927:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:709: UserWarning: Unsupported estimator `ensemble_forecaster` for method `compare_models()`, removing from model_library
  warnings.warn(

2022-10-02 17:02:11,927:INFO:Initializing Naive Forecaster
2022-10-02 17:02:11,927:INFO:Total runtime is 0.0 minutes
2022-10-02 17:02:11,935:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:11,935:INFO:Initializing create_model()
2022-10-02 17:02:11,935:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=naive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:11,935:INFO:Checking exceptions
2022-10-02 17:02:11,935:INFO:Importing libraries
2022-10-02 17:02:11,935:INFO:Copying training dataset
2022-10-02 17:02:11,943:INFO:Defining folds
2022-10-02 17:02:11,943:INFO:Declaring metric variables
2022-10-02 17:02:11,951:INFO:Importing untrained model
2022-10-02 17:02:11,959:INFO:Naive Forecaster Imported successfully
2022-10-02 17:02:11,983:INFO:Starting cross validation
2022-10-02 17:02:11,983:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:12,079:INFO:Calculating mean and std
2022-10-02 17:02:12,087:INFO:Creating metrics dataframe
2022-10-02 17:02:12,087:INFO:Uploading results into container
2022-10-02 17:02:12,087:INFO:Uploading model into container now
2022-10-02 17:02:12,087:INFO:master_model_container: 28
2022-10-02 17:02:12,087:INFO:display_container: 3
2022-10-02 17:02:12,087:INFO:NaiveForecaster()
2022-10-02 17:02:12,087:INFO:create_model() successfully completed......................................
2022-10-02 17:02:12,288:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:12,288:INFO:Creating metrics dataframe
2022-10-02 17:02:12,304:INFO:Initializing Grand Means Forecaster
2022-10-02 17:02:12,304:INFO:Total runtime is 0.006286036968231201 minutes
2022-10-02 17:02:12,312:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:12,312:INFO:Initializing create_model()
2022-10-02 17:02:12,312:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=grand_means, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:12,312:INFO:Checking exceptions
2022-10-02 17:02:12,320:INFO:Importing libraries
2022-10-02 17:02:12,320:INFO:Copying training dataset
2022-10-02 17:02:12,320:INFO:Defining folds
2022-10-02 17:02:12,328:INFO:Declaring metric variables
2022-10-02 17:02:12,336:INFO:Importing untrained model
2022-10-02 17:02:12,344:INFO:Grand Means Forecaster Imported successfully
2022-10-02 17:02:12,360:INFO:Starting cross validation
2022-10-02 17:02:12,360:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:12,456:INFO:Calculating mean and std
2022-10-02 17:02:12,464:INFO:Creating metrics dataframe
2022-10-02 17:02:12,464:INFO:Uploading results into container
2022-10-02 17:02:12,464:INFO:Uploading model into container now
2022-10-02 17:02:12,464:INFO:master_model_container: 29
2022-10-02 17:02:12,464:INFO:display_container: 3
2022-10-02 17:02:12,464:INFO:NaiveForecaster(strategy='mean')
2022-10-02 17:02:12,464:INFO:create_model() successfully completed......................................
2022-10-02 17:02:12,672:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:12,672:INFO:Creating metrics dataframe
2022-10-02 17:02:12,696:INFO:Initializing Seasonal Naive Forecaster
2022-10-02 17:02:12,696:INFO:Total runtime is 0.012817219893137614 minutes
2022-10-02 17:02:12,696:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:12,704:INFO:Initializing create_model()
2022-10-02 17:02:12,704:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=snaive, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:12,704:INFO:Checking exceptions
2022-10-02 17:02:12,704:INFO:Importing libraries
2022-10-02 17:02:12,704:INFO:Copying training dataset
2022-10-02 17:02:12,704:INFO:Defining folds
2022-10-02 17:02:12,704:INFO:Declaring metric variables
2022-10-02 17:02:12,712:INFO:Importing untrained model
2022-10-02 17:02:12,720:INFO:Seasonal Naive Forecaster Imported successfully
2022-10-02 17:02:12,736:INFO:Starting cross validation
2022-10-02 17:02:12,736:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:12,832:INFO:Calculating mean and std
2022-10-02 17:02:12,832:INFO:Creating metrics dataframe
2022-10-02 17:02:12,840:INFO:Uploading results into container
2022-10-02 17:02:12,840:INFO:Uploading model into container now
2022-10-02 17:02:12,840:INFO:master_model_container: 30
2022-10-02 17:02:12,840:INFO:display_container: 3
2022-10-02 17:02:12,840:INFO:NaiveForecaster(sp=12)
2022-10-02 17:02:12,840:INFO:create_model() successfully completed......................................
2022-10-02 17:02:13,072:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:13,072:INFO:Creating metrics dataframe
2022-10-02 17:02:13,112:INFO:Initializing Polynomial Trend Forecaster
2022-10-02 17:02:13,112:INFO:Total runtime is 0.019754934310913085 minutes
2022-10-02 17:02:13,120:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:13,120:INFO:Initializing create_model()
2022-10-02 17:02:13,120:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=polytrend, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:13,120:INFO:Checking exceptions
2022-10-02 17:02:13,128:INFO:Importing libraries
2022-10-02 17:02:13,128:INFO:Copying training dataset
2022-10-02 17:02:13,136:INFO:Defining folds
2022-10-02 17:02:13,136:INFO:Declaring metric variables
2022-10-02 17:02:13,144:INFO:Importing untrained model
2022-10-02 17:02:13,152:INFO:Polynomial Trend Forecaster Imported successfully
2022-10-02 17:02:13,168:INFO:Starting cross validation
2022-10-02 17:02:13,176:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:13,264:INFO:Calculating mean and std
2022-10-02 17:02:13,272:INFO:Creating metrics dataframe
2022-10-02 17:02:13,272:INFO:Uploading results into container
2022-10-02 17:02:13,272:INFO:Uploading model into container now
2022-10-02 17:02:13,272:INFO:master_model_container: 31
2022-10-02 17:02:13,272:INFO:display_container: 3
2022-10-02 17:02:13,272:INFO:PolynomialTrendForecaster()
2022-10-02 17:02:13,272:INFO:create_model() successfully completed......................................
2022-10-02 17:02:13,496:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:13,496:INFO:Creating metrics dataframe
2022-10-02 17:02:13,520:INFO:Initializing ARIMA
2022-10-02 17:02:13,520:INFO:Total runtime is 0.026556905110677084 minutes
2022-10-02 17:02:13,528:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:13,528:INFO:Initializing create_model()
2022-10-02 17:02:13,528:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:13,528:INFO:Checking exceptions
2022-10-02 17:02:13,528:INFO:Importing libraries
2022-10-02 17:02:13,528:INFO:Copying training dataset
2022-10-02 17:02:13,536:INFO:Defining folds
2022-10-02 17:02:13,536:INFO:Declaring metric variables
2022-10-02 17:02:13,552:INFO:Importing untrained model
2022-10-02 17:02:13,560:INFO:ARIMA Imported successfully
2022-10-02 17:02:13,576:INFO:Starting cross validation
2022-10-02 17:02:13,576:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:14,099:INFO:Calculating mean and std
2022-10-02 17:02:14,107:INFO:Creating metrics dataframe
2022-10-02 17:02:14,107:INFO:Uploading results into container
2022-10-02 17:02:14,107:INFO:Uploading model into container now
2022-10-02 17:02:14,115:INFO:master_model_container: 32
2022-10-02 17:02:14,115:INFO:display_container: 3
2022-10-02 17:02:14,115:INFO:ARIMA(seasonal_order=(0, 1, 0, 12))
2022-10-02 17:02:14,115:INFO:create_model() successfully completed......................................
2022-10-02 17:02:14,331:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:14,331:INFO:Creating metrics dataframe
2022-10-02 17:02:14,355:INFO:Initializing Auto ARIMA
2022-10-02 17:02:14,355:INFO:Total runtime is 0.04047327438990275 minutes
2022-10-02 17:02:14,363:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:14,363:INFO:Initializing create_model()
2022-10-02 17:02:14,363:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=auto_arima, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:14,363:INFO:Checking exceptions
2022-10-02 17:02:14,363:INFO:Importing libraries
2022-10-02 17:02:14,363:INFO:Copying training dataset
2022-10-02 17:02:14,371:INFO:Defining folds
2022-10-02 17:02:14,371:INFO:Declaring metric variables
2022-10-02 17:02:14,379:INFO:Importing untrained model
2022-10-02 17:02:14,387:INFO:Auto ARIMA Imported successfully
2022-10-02 17:02:14,411:INFO:Starting cross validation
2022-10-02 17:02:14,411:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:21,643:INFO:Calculating mean and std
2022-10-02 17:02:21,651:INFO:Creating metrics dataframe
2022-10-02 17:02:21,651:INFO:Uploading results into container
2022-10-02 17:02:21,651:INFO:Uploading model into container now
2022-10-02 17:02:21,651:INFO:master_model_container: 33
2022-10-02 17:02:21,651:INFO:display_container: 3
2022-10-02 17:02:21,659:INFO:AutoARIMA(random_state=1, sp=12, suppress_warnings=True)
2022-10-02 17:02:21,659:INFO:create_model() successfully completed......................................
2022-10-02 17:02:21,826:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:21,826:INFO:Creating metrics dataframe
2022-10-02 17:02:21,842:INFO:Initializing Exponential Smoothing
2022-10-02 17:02:21,842:INFO:Total runtime is 0.16525222063064576 minutes
2022-10-02 17:02:21,842:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:21,842:INFO:Initializing create_model()
2022-10-02 17:02:21,842:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=exp_smooth, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:21,842:INFO:Checking exceptions
2022-10-02 17:02:21,850:INFO:Importing libraries
2022-10-02 17:02:21,851:INFO:Copying training dataset
2022-10-02 17:02:21,851:INFO:Defining folds
2022-10-02 17:02:21,851:INFO:Declaring metric variables
2022-10-02 17:02:21,859:INFO:Importing untrained model
2022-10-02 17:02:21,867:INFO:Exponential Smoothing Imported successfully
2022-10-02 17:02:21,875:INFO:Starting cross validation
2022-10-02 17:02:21,883:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:22,125:INFO:Calculating mean and std
2022-10-02 17:02:22,135:INFO:Creating metrics dataframe
2022-10-02 17:02:22,135:INFO:Uploading results into container
2022-10-02 17:02:22,135:INFO:Uploading model into container now
2022-10-02 17:02:22,135:INFO:master_model_container: 34
2022-10-02 17:02:22,135:INFO:display_container: 3
2022-10-02 17:02:22,142:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2022-10-02 17:02:22,142:INFO:create_model() successfully completed......................................
2022-10-02 17:02:22,309:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:22,309:INFO:Creating metrics dataframe
2022-10-02 17:02:22,325:INFO:Initializing Croston
2022-10-02 17:02:22,325:INFO:Total runtime is 0.1733095169067383 minutes
2022-10-02 17:02:22,325:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:22,325:INFO:Initializing create_model()
2022-10-02 17:02:22,325:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=croston, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:22,325:INFO:Checking exceptions
2022-10-02 17:02:22,325:INFO:Importing libraries
2022-10-02 17:02:22,325:INFO:Copying training dataset
2022-10-02 17:02:22,335:INFO:Defining folds
2022-10-02 17:02:22,335:INFO:Declaring metric variables
2022-10-02 17:02:22,342:INFO:Importing untrained model
2022-10-02 17:02:22,342:INFO:Croston Imported successfully
2022-10-02 17:02:22,358:INFO:Starting cross validation
2022-10-02 17:02:22,358:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:22,415:INFO:Calculating mean and std
2022-10-02 17:02:22,415:INFO:Creating metrics dataframe
2022-10-02 17:02:22,422:INFO:Uploading results into container
2022-10-02 17:02:22,422:INFO:Uploading model into container now
2022-10-02 17:02:22,422:INFO:master_model_container: 35
2022-10-02 17:02:22,422:INFO:display_container: 3
2022-10-02 17:02:22,422:INFO:Croston()
2022-10-02 17:02:22,422:INFO:create_model() successfully completed......................................
2022-10-02 17:02:22,584:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:22,584:INFO:Creating metrics dataframe
2022-10-02 17:02:22,609:INFO:Initializing ETS
2022-10-02 17:02:22,609:INFO:Total runtime is 0.178048042456309 minutes
2022-10-02 17:02:22,617:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:22,625:INFO:Initializing create_model()
2022-10-02 17:02:22,625:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ets, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:22,625:INFO:Checking exceptions
2022-10-02 17:02:22,625:INFO:Importing libraries
2022-10-02 17:02:22,625:INFO:Copying training dataset
2022-10-02 17:02:22,638:INFO:Defining folds
2022-10-02 17:02:22,641:INFO:Declaring metric variables
2022-10-02 17:02:22,651:INFO:Importing untrained model
2022-10-02 17:02:22,665:INFO:ETS Imported successfully
2022-10-02 17:02:22,673:INFO:Starting cross validation
2022-10-02 17:02:22,681:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:23,042:INFO:Calculating mean and std
2022-10-02 17:02:23,042:INFO:Creating metrics dataframe
2022-10-02 17:02:23,050:INFO:Uploading results into container
2022-10-02 17:02:23,050:INFO:Uploading model into container now
2022-10-02 17:02:23,051:INFO:master_model_container: 36
2022-10-02 17:02:23,052:INFO:display_container: 3
2022-10-02 17:02:23,052:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 17:02:23,052:INFO:create_model() successfully completed......................................
2022-10-02 17:02:23,221:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:23,221:INFO:Creating metrics dataframe
2022-10-02 17:02:23,229:INFO:Initializing Theta Forecaster
2022-10-02 17:02:23,229:INFO:Total runtime is 0.1883800705273946 minutes
2022-10-02 17:02:23,237:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:23,237:INFO:Initializing create_model()
2022-10-02 17:02:23,237:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=theta, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:23,237:INFO:Checking exceptions
2022-10-02 17:02:23,237:INFO:Importing libraries
2022-10-02 17:02:23,237:INFO:Copying training dataset
2022-10-02 17:02:23,237:INFO:Defining folds
2022-10-02 17:02:23,237:INFO:Declaring metric variables
2022-10-02 17:02:23,249:INFO:Importing untrained model
2022-10-02 17:02:23,253:INFO:Theta Forecaster Imported successfully
2022-10-02 17:02:23,261:INFO:Starting cross validation
2022-10-02 17:02:23,261:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:23,366:INFO:Calculating mean and std
2022-10-02 17:02:23,368:INFO:Creating metrics dataframe
2022-10-02 17:02:23,368:INFO:Uploading results into container
2022-10-02 17:02:23,368:INFO:Uploading model into container now
2022-10-02 17:02:23,376:INFO:master_model_container: 37
2022-10-02 17:02:23,376:INFO:display_container: 3
2022-10-02 17:02:23,376:INFO:ThetaForecaster(sp=12)
2022-10-02 17:02:23,376:INFO:create_model() successfully completed......................................
2022-10-02 17:02:23,558:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:23,558:INFO:Creating metrics dataframe
2022-10-02 17:02:23,567:INFO:Initializing TBATS
2022-10-02 17:02:23,567:INFO:Total runtime is 0.19401432673136393 minutes
2022-10-02 17:02:23,575:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:23,575:INFO:Initializing create_model()
2022-10-02 17:02:23,575:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=tbats, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:23,575:INFO:Checking exceptions
2022-10-02 17:02:23,575:INFO:Importing libraries
2022-10-02 17:02:23,575:INFO:Copying training dataset
2022-10-02 17:02:23,575:INFO:Defining folds
2022-10-02 17:02:23,575:INFO:Declaring metric variables
2022-10-02 17:02:23,583:INFO:Importing untrained model
2022-10-02 17:02:23,591:INFO:TBATS Imported successfully
2022-10-02 17:02:23,599:INFO:Starting cross validation
2022-10-02 17:02:23,599:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:02:56,415:INFO:Calculating mean and std
2022-10-02 17:02:56,415:INFO:Creating metrics dataframe
2022-10-02 17:02:56,423:INFO:Uploading results into container
2022-10-02 17:02:56,423:INFO:Uploading model into container now
2022-10-02 17:02:56,423:INFO:master_model_container: 38
2022-10-02 17:02:56,423:INFO:display_container: 3
2022-10-02 17:02:56,423:INFO:TBATS(show_warnings=False, sp=[12], use_box_cox=True)
2022-10-02 17:02:56,423:INFO:create_model() successfully completed......................................
2022-10-02 17:02:56,614:INFO:SubProcess create_model() end ==================================
2022-10-02 17:02:56,614:INFO:Creating metrics dataframe
2022-10-02 17:02:56,655:INFO:Initializing BATS
2022-10-02 17:02:56,655:INFO:Total runtime is 0.7454736987749735 minutes
2022-10-02 17:02:56,663:INFO:SubProcess create_model() called ==================================
2022-10-02 17:02:56,663:INFO:Initializing create_model()
2022-10-02 17:02:56,663:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=bats, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:02:56,663:INFO:Checking exceptions
2022-10-02 17:02:56,671:INFO:Importing libraries
2022-10-02 17:02:56,671:INFO:Copying training dataset
2022-10-02 17:02:56,671:INFO:Defining folds
2022-10-02 17:02:56,681:INFO:Declaring metric variables
2022-10-02 17:02:56,689:INFO:Importing untrained model
2022-10-02 17:02:56,710:INFO:BATS Imported successfully
2022-10-02 17:02:56,721:INFO:Starting cross validation
2022-10-02 17:02:56,721:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:12,010:INFO:Calculating mean and std
2022-10-02 17:03:12,018:INFO:Creating metrics dataframe
2022-10-02 17:03:12,018:INFO:Uploading results into container
2022-10-02 17:03:12,018:INFO:Uploading model into container now
2022-10-02 17:03:12,018:INFO:master_model_container: 39
2022-10-02 17:03:12,018:INFO:display_container: 3
2022-10-02 17:03:12,018:INFO:BATS(show_warnings=False, sp=12, use_box_cox=True)
2022-10-02 17:03:12,018:INFO:create_model() successfully completed......................................
2022-10-02 17:03:12,242:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:12,242:INFO:Creating metrics dataframe
2022-10-02 17:03:12,282:INFO:Initializing Linear w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:12,282:INFO:Total runtime is 1.0059274276097616 minutes
2022-10-02 17:03:12,282:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:12,282:INFO:Initializing create_model()
2022-10-02 17:03:12,282:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:12,282:INFO:Checking exceptions
2022-10-02 17:03:12,282:INFO:Importing libraries
2022-10-02 17:03:12,290:INFO:Copying training dataset
2022-10-02 17:03:12,290:INFO:Defining folds
2022-10-02 17:03:12,290:INFO:Declaring metric variables
2022-10-02 17:03:12,298:INFO:Importing untrained model
2022-10-02 17:03:12,306:INFO:Linear w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:12,320:INFO:Starting cross validation
2022-10-02 17:03:12,322:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:12,456:INFO:Calculating mean and std
2022-10-02 17:03:12,456:INFO:Creating metrics dataframe
2022-10-02 17:03:12,464:INFO:Uploading results into container
2022-10-02 17:03:12,464:INFO:Uploading model into container now
2022-10-02 17:03:12,464:INFO:master_model_container: 40
2022-10-02 17:03:12,464:INFO:display_container: 3
2022-10-02 17:03:12,464:INFO:BaseCdsDtForecaster(regressor=LinearRegression(n_jobs=-1), sp=12,
                    window_length=12)
2022-10-02 17:03:12,464:INFO:create_model() successfully completed......................................
2022-10-02 17:03:12,632:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:12,632:INFO:Creating metrics dataframe
2022-10-02 17:03:12,648:INFO:Initializing Elastic Net w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:12,648:INFO:Total runtime is 1.012023663520813 minutes
2022-10-02 17:03:12,656:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:12,656:INFO:Initializing create_model()
2022-10-02 17:03:12,656:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=en_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:12,656:INFO:Checking exceptions
2022-10-02 17:03:12,656:INFO:Importing libraries
2022-10-02 17:03:12,656:INFO:Copying training dataset
2022-10-02 17:03:12,656:INFO:Defining folds
2022-10-02 17:03:12,656:INFO:Declaring metric variables
2022-10-02 17:03:12,664:INFO:Importing untrained model
2022-10-02 17:03:12,672:INFO:Elastic Net w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:12,680:INFO:Starting cross validation
2022-10-02 17:03:12,680:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:12,818:INFO:Calculating mean and std
2022-10-02 17:03:12,818:INFO:Creating metrics dataframe
2022-10-02 17:03:12,826:INFO:Uploading results into container
2022-10-02 17:03:12,826:INFO:Uploading model into container now
2022-10-02 17:03:12,826:INFO:master_model_container: 41
2022-10-02 17:03:12,826:INFO:display_container: 3
2022-10-02 17:03:12,828:INFO:BaseCdsDtForecaster(regressor=ElasticNet(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:12,828:INFO:create_model() successfully completed......................................
2022-10-02 17:03:12,994:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:12,994:INFO:Creating metrics dataframe
2022-10-02 17:03:13,010:INFO:Initializing Ridge w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:13,010:INFO:Total runtime is 1.0180592219034832 minutes
2022-10-02 17:03:13,010:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:13,018:INFO:Initializing create_model()
2022-10-02 17:03:13,018:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ridge_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:13,018:INFO:Checking exceptions
2022-10-02 17:03:13,018:INFO:Importing libraries
2022-10-02 17:03:13,018:INFO:Copying training dataset
2022-10-02 17:03:13,018:INFO:Defining folds
2022-10-02 17:03:13,018:INFO:Declaring metric variables
2022-10-02 17:03:13,028:INFO:Importing untrained model
2022-10-02 17:03:13,028:INFO:Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:13,045:INFO:Starting cross validation
2022-10-02 17:03:13,045:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:13,171:INFO:Calculating mean and std
2022-10-02 17:03:13,171:INFO:Creating metrics dataframe
2022-10-02 17:03:13,179:INFO:Uploading results into container
2022-10-02 17:03:13,179:INFO:Uploading model into container now
2022-10-02 17:03:13,179:INFO:master_model_container: 42
2022-10-02 17:03:13,179:INFO:display_container: 3
2022-10-02 17:03:13,179:INFO:BaseCdsDtForecaster(regressor=Ridge(random_state=1), sp=12, window_length=12)
2022-10-02 17:03:13,179:INFO:create_model() successfully completed......................................
2022-10-02 17:03:13,369:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:13,369:INFO:Creating metrics dataframe
2022-10-02 17:03:13,394:INFO:Initializing Lasso w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:13,394:INFO:Total runtime is 1.0244598984718325 minutes
2022-10-02 17:03:13,394:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:13,394:INFO:Initializing create_model()
2022-10-02 17:03:13,394:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lasso_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:13,394:INFO:Checking exceptions
2022-10-02 17:03:13,394:INFO:Importing libraries
2022-10-02 17:03:13,402:INFO:Copying training dataset
2022-10-02 17:03:13,402:INFO:Defining folds
2022-10-02 17:03:13,402:INFO:Declaring metric variables
2022-10-02 17:03:13,410:INFO:Importing untrained model
2022-10-02 17:03:13,410:INFO:Lasso w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:13,418:INFO:Starting cross validation
2022-10-02 17:03:13,418:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:13,547:INFO:Calculating mean and std
2022-10-02 17:03:13,547:INFO:Creating metrics dataframe
2022-10-02 17:03:13,555:INFO:Uploading results into container
2022-10-02 17:03:13,555:INFO:Uploading model into container now
2022-10-02 17:03:13,555:INFO:master_model_container: 43
2022-10-02 17:03:13,555:INFO:display_container: 3
2022-10-02 17:03:13,555:INFO:BaseCdsDtForecaster(regressor=Lasso(random_state=1), sp=12, window_length=12)
2022-10-02 17:03:13,555:INFO:create_model() successfully completed......................................
2022-10-02 17:03:13,724:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:13,724:INFO:Creating metrics dataframe
2022-10-02 17:03:13,764:INFO:Initializing Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:13,772:INFO:Total runtime is 1.0307549158732099 minutes
2022-10-02 17:03:13,780:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:13,780:INFO:Initializing create_model()
2022-10-02 17:03:13,780:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:13,780:INFO:Checking exceptions
2022-10-02 17:03:13,780:INFO:Importing libraries
2022-10-02 17:03:13,780:INFO:Copying training dataset
2022-10-02 17:03:13,788:INFO:Defining folds
2022-10-02 17:03:13,788:INFO:Declaring metric variables
2022-10-02 17:03:13,804:INFO:Importing untrained model
2022-10-02 17:03:13,812:INFO:Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:13,836:INFO:Starting cross validation
2022-10-02 17:03:13,844:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:13,948:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 17:03:13,948:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 17:03:13,956:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), Lars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 17:03:13,980:INFO:Calculating mean and std
2022-10-02 17:03:13,980:INFO:Creating metrics dataframe
2022-10-02 17:03:13,988:INFO:Uploading results into container
2022-10-02 17:03:13,988:INFO:Uploading model into container now
2022-10-02 17:03:13,988:INFO:master_model_container: 44
2022-10-02 17:03:13,988:INFO:display_container: 3
2022-10-02 17:03:13,988:INFO:BaseCdsDtForecaster(regressor=Lars(random_state=1), sp=12, window_length=12)
2022-10-02 17:03:13,988:INFO:create_model() successfully completed......................................
2022-10-02 17:03:14,155:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:14,155:INFO:Creating metrics dataframe
2022-10-02 17:03:14,171:INFO:Initializing Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:14,171:INFO:Total runtime is 1.0374113003412886 minutes
2022-10-02 17:03:14,179:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:14,179:INFO:Initializing create_model()
2022-10-02 17:03:14,179:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=llar_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:14,179:INFO:Checking exceptions
2022-10-02 17:03:14,179:INFO:Importing libraries
2022-10-02 17:03:14,179:INFO:Copying training dataset
2022-10-02 17:03:14,187:INFO:Defining folds
2022-10-02 17:03:14,187:INFO:Declaring metric variables
2022-10-02 17:03:14,187:INFO:Importing untrained model
2022-10-02 17:03:14,195:INFO:Lasso Least Angular Regressor w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:14,211:INFO:Starting cross validation
2022-10-02 17:03:14,211:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:14,299:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-02 17:03:14,307:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-02 17:03:14,315:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), LassoLars())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)

Set parameter alpha to: original_alpha * np.sqrt(n_samples). 
  warnings.warn(

2022-10-02 17:03:14,339:INFO:Calculating mean and std
2022-10-02 17:03:14,339:INFO:Creating metrics dataframe
2022-10-02 17:03:14,347:INFO:Uploading results into container
2022-10-02 17:03:14,347:INFO:Uploading model into container now
2022-10-02 17:03:14,347:INFO:master_model_container: 45
2022-10-02 17:03:14,347:INFO:display_container: 3
2022-10-02 17:03:14,347:INFO:BaseCdsDtForecaster(regressor=LassoLars(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:14,347:INFO:create_model() successfully completed......................................
2022-10-02 17:03:14,519:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:14,519:INFO:Creating metrics dataframe
2022-10-02 17:03:14,535:INFO:Initializing Bayesian Ridge w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:14,535:INFO:Total runtime is 1.0434774915377303 minutes
2022-10-02 17:03:14,544:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:14,544:INFO:Initializing create_model()
2022-10-02 17:03:14,544:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=br_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:14,544:INFO:Checking exceptions
2022-10-02 17:03:14,544:INFO:Importing libraries
2022-10-02 17:03:14,544:INFO:Copying training dataset
2022-10-02 17:03:14,552:INFO:Defining folds
2022-10-02 17:03:14,552:INFO:Declaring metric variables
2022-10-02 17:03:14,552:INFO:Importing untrained model
2022-10-02 17:03:14,560:INFO:Bayesian Ridge w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:14,568:INFO:Starting cross validation
2022-10-02 17:03:14,576:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:14,696:INFO:Calculating mean and std
2022-10-02 17:03:14,696:INFO:Creating metrics dataframe
2022-10-02 17:03:14,704:INFO:Uploading results into container
2022-10-02 17:03:14,704:INFO:Uploading model into container now
2022-10-02 17:03:14,704:INFO:master_model_container: 46
2022-10-02 17:03:14,704:INFO:display_container: 3
2022-10-02 17:03:14,704:INFO:BaseCdsDtForecaster(regressor=BayesianRidge(), sp=12, window_length=12)
2022-10-02 17:03:14,704:INFO:create_model() successfully completed......................................
2022-10-02 17:03:14,865:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:14,865:INFO:Creating metrics dataframe
2022-10-02 17:03:14,886:INFO:Initializing Huber w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:14,886:INFO:Total runtime is 1.0493256966272995 minutes
2022-10-02 17:03:14,894:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:14,894:INFO:Initializing create_model()
2022-10-02 17:03:14,894:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=huber_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:14,894:INFO:Checking exceptions
2022-10-02 17:03:14,894:INFO:Importing libraries
2022-10-02 17:03:14,894:INFO:Copying training dataset
2022-10-02 17:03:14,902:INFO:Defining folds
2022-10-02 17:03:14,902:INFO:Declaring metric variables
2022-10-02 17:03:14,902:INFO:Importing untrained model
2022-10-02 17:03:14,910:INFO:Huber w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:14,926:INFO:Starting cross validation
2022-10-02 17:03:14,926:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:15,062:INFO:Calculating mean and std
2022-10-02 17:03:15,070:INFO:Creating metrics dataframe
2022-10-02 17:03:15,070:INFO:Uploading results into container
2022-10-02 17:03:15,070:INFO:Uploading model into container now
2022-10-02 17:03:15,070:INFO:master_model_container: 47
2022-10-02 17:03:15,070:INFO:display_container: 3
2022-10-02 17:03:15,070:INFO:BaseCdsDtForecaster(regressor=HuberRegressor(), sp=12, window_length=12)
2022-10-02 17:03:15,070:INFO:create_model() successfully completed......................................
2022-10-02 17:03:15,244:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:15,244:INFO:Creating metrics dataframe
2022-10-02 17:03:15,285:INFO:Initializing Passive Aggressive w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:15,285:INFO:Total runtime is 1.0559767127037054 minutes
2022-10-02 17:03:15,295:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:15,303:INFO:Initializing create_model()
2022-10-02 17:03:15,303:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=par_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:15,303:INFO:Checking exceptions
2022-10-02 17:03:15,303:INFO:Importing libraries
2022-10-02 17:03:15,303:INFO:Copying training dataset
2022-10-02 17:03:15,311:INFO:Defining folds
2022-10-02 17:03:15,311:INFO:Declaring metric variables
2022-10-02 17:03:15,319:INFO:Importing untrained model
2022-10-02 17:03:15,335:INFO:Passive Aggressive w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:15,359:INFO:Starting cross validation
2022-10-02 17:03:15,367:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:15,479:INFO:Calculating mean and std
2022-10-02 17:03:15,487:INFO:Creating metrics dataframe
2022-10-02 17:03:15,487:INFO:Uploading results into container
2022-10-02 17:03:15,487:INFO:Uploading model into container now
2022-10-02 17:03:15,487:INFO:master_model_container: 48
2022-10-02 17:03:15,487:INFO:display_container: 3
2022-10-02 17:03:15,495:INFO:BaseCdsDtForecaster(regressor=PassiveAggressiveRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:15,495:INFO:create_model() successfully completed......................................
2022-10-02 17:03:15,661:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:15,661:INFO:Creating metrics dataframe
2022-10-02 17:03:15,678:INFO:Initializing Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:15,678:INFO:Total runtime is 1.062520543734233 minutes
2022-10-02 17:03:15,686:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:15,686:INFO:Initializing create_model()
2022-10-02 17:03:15,686:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=omp_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:15,686:INFO:Checking exceptions
2022-10-02 17:03:15,686:INFO:Importing libraries
2022-10-02 17:03:15,686:INFO:Copying training dataset
2022-10-02 17:03:15,686:INFO:Defining folds
2022-10-02 17:03:15,686:INFO:Declaring metric variables
2022-10-02 17:03:15,694:INFO:Importing untrained model
2022-10-02 17:03:15,702:INFO:Orthogonal Matching Pursuit w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:15,710:INFO:Starting cross validation
2022-10-02 17:03:15,710:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:15,792:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 17:03:15,792:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 17:03:15,800:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\linear_model\_base.py:133: FutureWarning: The default of 'normalize' will be set to False in version 1.2 and deprecated in version 1.4.
If you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:

from sklearn.pipeline import make_pipeline

model = make_pipeline(StandardScaler(with_mean=False), OrthogonalMatchingPursuit())

If you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:

kwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}
model.fit(X, y, **kwargs)


  warnings.warn(

2022-10-02 17:03:15,827:INFO:Calculating mean and std
2022-10-02 17:03:15,835:INFO:Creating metrics dataframe
2022-10-02 17:03:15,835:INFO:Uploading results into container
2022-10-02 17:03:15,835:INFO:Uploading model into container now
2022-10-02 17:03:15,835:INFO:master_model_container: 49
2022-10-02 17:03:15,835:INFO:display_container: 3
2022-10-02 17:03:15,835:INFO:BaseCdsDtForecaster(regressor=OrthogonalMatchingPursuit(), sp=12,
                    window_length=12)
2022-10-02 17:03:15,835:INFO:create_model() successfully completed......................................
2022-10-02 17:03:16,010:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:16,010:INFO:Creating metrics dataframe
2022-10-02 17:03:16,027:INFO:Initializing K Neighbors w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:16,027:INFO:Total runtime is 1.0683414141337082 minutes
2022-10-02 17:03:16,027:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:16,027:INFO:Initializing create_model()
2022-10-02 17:03:16,027:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=knn_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:16,027:INFO:Checking exceptions
2022-10-02 17:03:16,035:INFO:Importing libraries
2022-10-02 17:03:16,035:INFO:Copying training dataset
2022-10-02 17:03:16,035:INFO:Defining folds
2022-10-02 17:03:16,035:INFO:Declaring metric variables
2022-10-02 17:03:16,044:INFO:Importing untrained model
2022-10-02 17:03:16,051:INFO:K Neighbors w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:16,059:INFO:Starting cross validation
2022-10-02 17:03:16,059:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:16,294:INFO:Calculating mean and std
2022-10-02 17:03:16,294:INFO:Creating metrics dataframe
2022-10-02 17:03:16,294:INFO:Uploading results into container
2022-10-02 17:03:16,302:INFO:Uploading model into container now
2022-10-02 17:03:16,302:INFO:master_model_container: 50
2022-10-02 17:03:16,302:INFO:display_container: 3
2022-10-02 17:03:16,302:INFO:BaseCdsDtForecaster(regressor=KNeighborsRegressor(n_jobs=-1), sp=12,
                    window_length=12)
2022-10-02 17:03:16,302:INFO:create_model() successfully completed......................................
2022-10-02 17:03:16,469:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:16,469:INFO:Creating metrics dataframe
2022-10-02 17:03:16,485:INFO:Initializing Decision Tree w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:16,485:INFO:Total runtime is 1.075970908006033 minutes
2022-10-02 17:03:16,494:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:16,494:INFO:Initializing create_model()
2022-10-02 17:03:16,494:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=dt_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:16,494:INFO:Checking exceptions
2022-10-02 17:03:16,494:INFO:Importing libraries
2022-10-02 17:03:16,494:INFO:Copying training dataset
2022-10-02 17:03:16,494:INFO:Defining folds
2022-10-02 17:03:16,494:INFO:Declaring metric variables
2022-10-02 17:03:16,502:INFO:Importing untrained model
2022-10-02 17:03:16,510:INFO:Decision Tree w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:16,518:INFO:Starting cross validation
2022-10-02 17:03:16,518:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:16,654:INFO:Calculating mean and std
2022-10-02 17:03:16,654:INFO:Creating metrics dataframe
2022-10-02 17:03:16,662:INFO:Uploading results into container
2022-10-02 17:03:16,662:INFO:Uploading model into container now
2022-10-02 17:03:16,662:INFO:master_model_container: 51
2022-10-02 17:03:16,662:INFO:display_container: 3
2022-10-02 17:03:16,662:INFO:BaseCdsDtForecaster(regressor=DecisionTreeRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:16,662:INFO:create_model() successfully completed......................................
2022-10-02 17:03:16,852:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:16,852:INFO:Creating metrics dataframe
2022-10-02 17:03:16,868:INFO:Initializing Random Forest w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:16,868:INFO:Total runtime is 1.0823554793993637 minutes
2022-10-02 17:03:16,876:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:16,876:INFO:Initializing create_model()
2022-10-02 17:03:16,876:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=rf_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:16,876:INFO:Checking exceptions
2022-10-02 17:03:16,876:INFO:Importing libraries
2022-10-02 17:03:16,876:INFO:Copying training dataset
2022-10-02 17:03:16,884:INFO:Defining folds
2022-10-02 17:03:16,884:INFO:Declaring metric variables
2022-10-02 17:03:16,884:INFO:Importing untrained model
2022-10-02 17:03:16,893:INFO:Random Forest w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:16,901:INFO:Starting cross validation
2022-10-02 17:03:16,901:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:17,419:INFO:Calculating mean and std
2022-10-02 17:03:17,419:INFO:Creating metrics dataframe
2022-10-02 17:03:17,419:INFO:Uploading results into container
2022-10-02 17:03:17,427:INFO:Uploading model into container now
2022-10-02 17:03:17,427:INFO:master_model_container: 52
2022-10-02 17:03:17,427:INFO:display_container: 3
2022-10-02 17:03:17,427:INFO:BaseCdsDtForecaster(regressor=RandomForestRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:17,427:INFO:create_model() successfully completed......................................
2022-10-02 17:03:17,594:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:17,594:INFO:Creating metrics dataframe
2022-10-02 17:03:17,610:INFO:Initializing Extra Trees w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:17,610:INFO:Total runtime is 1.0947218259175624 minutes
2022-10-02 17:03:17,618:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:17,618:INFO:Initializing create_model()
2022-10-02 17:03:17,618:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=et_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:17,618:INFO:Checking exceptions
2022-10-02 17:03:17,618:INFO:Importing libraries
2022-10-02 17:03:17,618:INFO:Copying training dataset
2022-10-02 17:03:17,627:INFO:Defining folds
2022-10-02 17:03:17,627:INFO:Declaring metric variables
2022-10-02 17:03:17,627:INFO:Importing untrained model
2022-10-02 17:03:17,635:INFO:Extra Trees w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:17,643:INFO:Starting cross validation
2022-10-02 17:03:17,643:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:18,132:INFO:Calculating mean and std
2022-10-02 17:03:18,132:INFO:Creating metrics dataframe
2022-10-02 17:03:18,140:INFO:Uploading results into container
2022-10-02 17:03:18,140:INFO:Uploading model into container now
2022-10-02 17:03:18,140:INFO:master_model_container: 53
2022-10-02 17:03:18,140:INFO:display_container: 3
2022-10-02 17:03:18,140:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:18,140:INFO:create_model() successfully completed......................................
2022-10-02 17:03:18,308:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:18,308:INFO:Creating metrics dataframe
2022-10-02 17:03:18,324:INFO:Initializing Gradient Boosting w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:18,324:INFO:Total runtime is 1.1066303451855983 minutes
2022-10-02 17:03:18,332:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:18,332:INFO:Initializing create_model()
2022-10-02 17:03:18,332:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=gbr_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:18,332:INFO:Checking exceptions
2022-10-02 17:03:18,332:INFO:Importing libraries
2022-10-02 17:03:18,332:INFO:Copying training dataset
2022-10-02 17:03:18,332:INFO:Defining folds
2022-10-02 17:03:18,332:INFO:Declaring metric variables
2022-10-02 17:03:18,340:INFO:Importing untrained model
2022-10-02 17:03:18,348:INFO:Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:18,364:INFO:Starting cross validation
2022-10-02 17:03:18,364:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:18,551:INFO:Calculating mean and std
2022-10-02 17:03:18,551:INFO:Creating metrics dataframe
2022-10-02 17:03:18,559:INFO:Uploading results into container
2022-10-02 17:03:18,559:INFO:Uploading model into container now
2022-10-02 17:03:18,559:INFO:master_model_container: 54
2022-10-02 17:03:18,559:INFO:display_container: 3
2022-10-02 17:03:18,559:INFO:BaseCdsDtForecaster(regressor=GradientBoostingRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:18,559:INFO:create_model() successfully completed......................................
2022-10-02 17:03:18,727:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:18,727:INFO:Creating metrics dataframe
2022-10-02 17:03:18,751:INFO:Initializing AdaBoost w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:18,751:INFO:Total runtime is 1.1137456695238754 minutes
2022-10-02 17:03:18,761:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:18,761:INFO:Initializing create_model()
2022-10-02 17:03:18,761:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ada_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:18,761:INFO:Checking exceptions
2022-10-02 17:03:18,761:INFO:Importing libraries
2022-10-02 17:03:18,761:INFO:Copying training dataset
2022-10-02 17:03:18,761:INFO:Defining folds
2022-10-02 17:03:18,761:INFO:Declaring metric variables
2022-10-02 17:03:18,769:INFO:Importing untrained model
2022-10-02 17:03:18,777:INFO:AdaBoost w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:18,785:INFO:Starting cross validation
2022-10-02 17:03:18,785:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:19,046:INFO:Calculating mean and std
2022-10-02 17:03:19,050:INFO:Creating metrics dataframe
2022-10-02 17:03:19,050:INFO:Uploading results into container
2022-10-02 17:03:19,050:INFO:Uploading model into container now
2022-10-02 17:03:19,050:INFO:master_model_container: 55
2022-10-02 17:03:19,050:INFO:display_container: 3
2022-10-02 17:03:19,059:INFO:BaseCdsDtForecaster(regressor=AdaBoostRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:19,059:INFO:create_model() successfully completed......................................
2022-10-02 17:03:19,227:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:19,227:INFO:Creating metrics dataframe
2022-10-02 17:03:19,242:INFO:Initializing Light Gradient Boosting w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:19,242:INFO:Total runtime is 1.121918698151907 minutes
2022-10-02 17:03:19,250:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:19,250:INFO:Initializing create_model()
2022-10-02 17:03:19,250:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=lightgbm_cds_dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039BA4790>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:19,250:INFO:Checking exceptions
2022-10-02 17:03:19,250:INFO:Importing libraries
2022-10-02 17:03:19,250:INFO:Copying training dataset
2022-10-02 17:03:19,259:INFO:Defining folds
2022-10-02 17:03:19,259:INFO:Declaring metric variables
2022-10-02 17:03:19,259:INFO:Importing untrained model
2022-10-02 17:03:19,267:INFO:Light Gradient Boosting w/ Cond. Deseasonalize & Detrending Imported successfully
2022-10-02 17:03:19,275:INFO:Starting cross validation
2022-10-02 17:03:19,275:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:19,435:INFO:Calculating mean and std
2022-10-02 17:03:19,435:INFO:Creating metrics dataframe
2022-10-02 17:03:19,444:INFO:Uploading results into container
2022-10-02 17:03:19,444:INFO:Uploading model into container now
2022-10-02 17:03:19,444:INFO:master_model_container: 56
2022-10-02 17:03:19,444:INFO:display_container: 3
2022-10-02 17:03:19,444:INFO:BaseCdsDtForecaster(regressor=LGBMRegressor(random_state=1), sp=12,
                    window_length=12)
2022-10-02 17:03:19,444:INFO:create_model() successfully completed......................................
2022-10-02 17:03:19,610:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:19,610:INFO:Creating metrics dataframe
2022-10-02 17:03:19,651:INFO:Initializing create_model()
2022-10-02 17:03:19,651:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:19,651:INFO:Checking exceptions
2022-10-02 17:03:19,651:INFO:Importing libraries
2022-10-02 17:03:19,651:INFO:Copying training dataset
2022-10-02 17:03:19,651:INFO:Defining folds
2022-10-02 17:03:19,651:INFO:Declaring metric variables
2022-10-02 17:03:19,651:INFO:Importing untrained model
2022-10-02 17:03:19,651:INFO:Declaring custom model
2022-10-02 17:03:19,660:INFO:Exponential Smoothing Imported successfully
2022-10-02 17:03:19,660:INFO:Cross validation set to False
2022-10-02 17:03:19,660:INFO:Fitting Model
2022-10-02 17:03:19,828:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:19,828:INFO:create_model() successfully completed......................................
2022-10-02 17:03:20,001:INFO:Initializing create_model()
2022-10-02 17:03:20,009:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=AutoETS(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:20,009:INFO:Checking exceptions
2022-10-02 17:03:20,010:INFO:Importing libraries
2022-10-02 17:03:20,010:INFO:Copying training dataset
2022-10-02 17:03:20,010:INFO:Defining folds
2022-10-02 17:03:20,010:INFO:Declaring metric variables
2022-10-02 17:03:20,010:INFO:Importing untrained model
2022-10-02 17:03:20,010:INFO:Declaring custom model
2022-10-02 17:03:20,010:INFO:ETS Imported successfully
2022-10-02 17:03:20,018:INFO:Cross validation set to False
2022-10-02 17:03:20,018:INFO:Fitting Model
2022-10-02 17:03:20,167:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:20,167:INFO:create_model() successfully completed......................................
2022-10-02 17:03:20,344:INFO:Initializing create_model()
2022-10-02 17:03:20,352:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:20,352:INFO:Checking exceptions
2022-10-02 17:03:20,352:INFO:Importing libraries
2022-10-02 17:03:20,352:INFO:Copying training dataset
2022-10-02 17:03:20,352:INFO:Defining folds
2022-10-02 17:03:20,352:INFO:Declaring metric variables
2022-10-02 17:03:20,352:INFO:Importing untrained model
2022-10-02 17:03:20,352:INFO:Declaring custom model
2022-10-02 17:03:20,352:INFO:ExtraTreesRegressor Imported successfully
2022-10-02 17:03:20,352:INFO:Cross validation set to False
2022-10-02 17:03:20,352:INFO:Fitting Model
2022-10-02 17:03:20,601:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:20,601:INFO:create_model() successfully completed......................................
2022-10-02 17:03:20,860:INFO:master_model_container: 56
2022-10-02 17:03:20,860:INFO:display_container: 3
2022-10-02 17:03:20,860:INFO:[ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), AutoETS(seasonal='mul', sp=12, trend='add'), BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)]
2022-10-02 17:03:20,860:INFO:compare_models() successfully completed......................................
2022-10-02 17:03:32,131:INFO:Initializing tune_model()
2022-10-02 17:03:32,131:INFO:tune_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MASE, custom_scorer=None, search_algorithm=None, choose_better=True, fit_kwargs=None, return_tuner=False, verbose=True, tuner_verbose=True, kwargs={}, search_library=pycaret, _allowed_search_algorithms=[None, 'random', 'grid'])
2022-10-02 17:03:32,139:INFO:Checking exceptions
2022-10-02 17:03:32,203:INFO:Copying training dataset
2022-10-02 17:03:32,208:INFO:Checking base model
2022-10-02 17:03:32,208:INFO:Base model : Exponential Smoothing
2022-10-02 17:03:32,224:INFO:Declaring metric variables
2022-10-02 17:03:32,232:INFO:Defining Hyperparameters
2022-10-02 17:03:32,682:INFO:Tuning with n_jobs=-1
2022-10-02 17:03:32,682:INFO:Initializing ForecastingRandomizedGridSearchCV
2022-10-02 17:03:33,227:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,251:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,356:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,380:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,404:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,420:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,476:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,600:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,609:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,850:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,859:WARNING:c:\Users\Alan\miniconda3\envs\pycaret\lib\site-packages\statsmodels\tsa\holtwinters\model.py:83: RuntimeWarning: overflow encountered in matmul
  return err.T @ err

2022-10-02 17:03:33,942:INFO:best_params: {'forecaster__model__use_boxcox': True, 'forecaster__model__trend': 'multiplicative', 'forecaster__model__sp': 12, 'forecaster__model__seasonal': 'additive'}
2022-10-02 17:03:33,942:INFO:Hyperparameter search completed
2022-10-02 17:03:33,942:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:33,942:INFO:Initializing create_model()
2022-10-02 17:03:33,942:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039B85880>, model_only=True, return_train_score=False, kwargs={'use_boxcox': True, 'trend': 'multiplicative', 'sp': 12, 'seasonal': 'additive'})
2022-10-02 17:03:33,942:INFO:Checking exceptions
2022-10-02 17:03:33,951:INFO:Importing libraries
2022-10-02 17:03:33,951:INFO:Copying training dataset
2022-10-02 17:03:33,951:INFO:Defining folds
2022-10-02 17:03:33,951:INFO:Declaring metric variables
2022-10-02 17:03:33,958:INFO:Importing untrained model
2022-10-02 17:03:33,958:INFO:Declaring custom model
2022-10-02 17:03:33,966:INFO:Exponential Smoothing Imported successfully
2022-10-02 17:03:33,984:INFO:Starting cross validation
2022-10-02 17:03:33,992:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:34,275:INFO:Calculating mean and std
2022-10-02 17:03:34,281:INFO:Creating metrics dataframe
2022-10-02 17:03:34,293:INFO:Finalizing model
2022-10-02 17:03:34,500:INFO:Uploading results into container
2022-10-02 17:03:34,500:INFO:Uploading model into container now
2022-10-02 17:03:34,500:INFO:master_model_container: 57
2022-10-02 17:03:34,500:INFO:display_container: 4
2022-10-02 17:03:34,500:INFO:ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True)
2022-10-02 17:03:34,500:INFO:create_model() successfully completed......................................
2022-10-02 17:03:34,733:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:34,733:INFO:choose_better activated
2022-10-02 17:03:34,733:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:34,741:INFO:Initializing create_model()
2022-10-02 17:03:34,741:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ExponentialSmoothing(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:34,741:INFO:Checking exceptions
2022-10-02 17:03:34,741:INFO:Importing libraries
2022-10-02 17:03:34,741:INFO:Copying training dataset
2022-10-02 17:03:34,749:INFO:Defining folds
2022-10-02 17:03:34,749:INFO:Declaring metric variables
2022-10-02 17:03:34,749:INFO:Importing untrained model
2022-10-02 17:03:34,749:INFO:Declaring custom model
2022-10-02 17:03:34,749:INFO:Exponential Smoothing Imported successfully
2022-10-02 17:03:34,749:INFO:Starting cross validation
2022-10-02 17:03:34,749:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:35,117:INFO:Calculating mean and std
2022-10-02 17:03:35,117:INFO:Creating metrics dataframe
2022-10-02 17:03:35,125:INFO:Finalizing model
2022-10-02 17:03:35,365:INFO:Uploading results into container
2022-10-02 17:03:35,365:INFO:Uploading model into container now
2022-10-02 17:03:35,366:INFO:master_model_container: 58
2022-10-02 17:03:35,366:INFO:display_container: 5
2022-10-02 17:03:35,366:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:35,366:INFO:create_model() successfully completed......................................
2022-10-02 17:03:35,559:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:35,567:INFO:ExponentialSmoothing(seasonal='mul', sp=12, trend='add') result for MASE is 0.5852
2022-10-02 17:03:35,567:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:35,567:INFO:Initializing create_model()
2022-10-02 17:03:35,567:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:35,567:INFO:Checking exceptions
2022-10-02 17:03:35,567:INFO:Importing libraries
2022-10-02 17:03:35,567:INFO:Copying training dataset
2022-10-02 17:03:35,575:INFO:Defining folds
2022-10-02 17:03:35,575:INFO:Declaring metric variables
2022-10-02 17:03:35,575:INFO:Importing untrained model
2022-10-02 17:03:35,575:INFO:Declaring custom model
2022-10-02 17:03:35,575:INFO:Exponential Smoothing Imported successfully
2022-10-02 17:03:35,575:INFO:Starting cross validation
2022-10-02 17:03:35,575:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:35,941:INFO:Calculating mean and std
2022-10-02 17:03:35,941:INFO:Creating metrics dataframe
2022-10-02 17:03:35,949:INFO:Finalizing model
2022-10-02 17:03:36,158:INFO:Uploading results into container
2022-10-02 17:03:36,158:INFO:Uploading model into container now
2022-10-02 17:03:36,158:INFO:master_model_container: 59
2022-10-02 17:03:36,158:INFO:display_container: 5
2022-10-02 17:03:36,158:INFO:ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True)
2022-10-02 17:03:36,158:INFO:create_model() successfully completed......................................
2022-10-02 17:03:36,358:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:36,358:INFO:ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True) result for MASE is 0.5352
2022-10-02 17:03:36,366:INFO:ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True) is best model
2022-10-02 17:03:36,366:INFO:choose_better completed
2022-10-02 17:03:36,383:INFO:master_model_container: 59
2022-10-02 17:03:36,383:INFO:display_container: 4
2022-10-02 17:03:36,383:INFO:ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True)
2022-10-02 17:03:36,383:INFO:tune_model() successfully completed......................................
2022-10-02 17:03:36,600:INFO:Initializing tune_model()
2022-10-02 17:03:36,600:INFO:tune_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=AutoETS(seasonal='mul', sp=12, trend='add'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MASE, custom_scorer=None, search_algorithm=None, choose_better=True, fit_kwargs=None, return_tuner=False, verbose=True, tuner_verbose=True, kwargs={}, search_library=pycaret, _allowed_search_algorithms=[None, 'random', 'grid'])
2022-10-02 17:03:36,600:INFO:Checking exceptions
2022-10-02 17:03:36,649:INFO:Copying training dataset
2022-10-02 17:03:36,657:INFO:Checking base model
2022-10-02 17:03:36,657:INFO:Base model : ETS
2022-10-02 17:03:36,665:INFO:Declaring metric variables
2022-10-02 17:03:36,665:INFO:Defining Hyperparameters
2022-10-02 17:03:36,891:INFO:Tuning with n_jobs=-1
2022-10-02 17:03:36,891:INFO:Initializing ForecastingRandomizedGridSearchCV
2022-10-02 17:03:39,041:INFO:best_params: {'forecaster__model__trend': 'add', 'forecaster__model__sp': 12, 'forecaster__model__seasonal': 'mul', 'forecaster__model__error': 'add'}
2022-10-02 17:03:39,041:INFO:Hyperparameter search completed
2022-10-02 17:03:39,041:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:39,041:INFO:Initializing create_model()
2022-10-02 17:03:39,041:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=AutoETS(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019036E728E0>, model_only=True, return_train_score=False, kwargs={'trend': 'add', 'sp': 12, 'seasonal': 'mul', 'error': 'add'})
2022-10-02 17:03:39,041:INFO:Checking exceptions
2022-10-02 17:03:39,050:INFO:Importing libraries
2022-10-02 17:03:39,050:INFO:Copying training dataset
2022-10-02 17:03:39,057:INFO:Defining folds
2022-10-02 17:03:39,057:INFO:Declaring metric variables
2022-10-02 17:03:39,057:INFO:Importing untrained model
2022-10-02 17:03:39,057:INFO:Declaring custom model
2022-10-02 17:03:39,065:INFO:ETS Imported successfully
2022-10-02 17:03:39,083:INFO:Starting cross validation
2022-10-02 17:03:39,083:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:39,550:INFO:Calculating mean and std
2022-10-02 17:03:39,550:INFO:Creating metrics dataframe
2022-10-02 17:03:39,558:INFO:Finalizing model
2022-10-02 17:03:39,724:INFO:Uploading results into container
2022-10-02 17:03:39,724:INFO:Uploading model into container now
2022-10-02 17:03:39,724:INFO:master_model_container: 60
2022-10-02 17:03:39,724:INFO:display_container: 5
2022-10-02 17:03:39,724:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:39,724:INFO:create_model() successfully completed......................................
2022-10-02 17:03:39,910:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:39,910:INFO:choose_better activated
2022-10-02 17:03:39,918:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:39,918:INFO:Initializing create_model()
2022-10-02 17:03:39,918:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=AutoETS(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:39,918:INFO:Checking exceptions
2022-10-02 17:03:39,926:INFO:Importing libraries
2022-10-02 17:03:39,926:INFO:Copying training dataset
2022-10-02 17:03:39,926:INFO:Defining folds
2022-10-02 17:03:39,926:INFO:Declaring metric variables
2022-10-02 17:03:39,926:INFO:Importing untrained model
2022-10-02 17:03:39,926:INFO:Declaring custom model
2022-10-02 17:03:39,926:INFO:ETS Imported successfully
2022-10-02 17:03:39,926:INFO:Starting cross validation
2022-10-02 17:03:39,926:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:40,315:INFO:Calculating mean and std
2022-10-02 17:03:40,315:INFO:Creating metrics dataframe
2022-10-02 17:03:40,315:INFO:Finalizing model
2022-10-02 17:03:40,449:INFO:Uploading results into container
2022-10-02 17:03:40,449:INFO:Uploading model into container now
2022-10-02 17:03:40,449:INFO:master_model_container: 61
2022-10-02 17:03:40,449:INFO:display_container: 6
2022-10-02 17:03:40,449:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:40,449:INFO:create_model() successfully completed......................................
2022-10-02 17:03:40,616:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:40,616:INFO:AutoETS(seasonal='mul', sp=12, trend='add') result for MASE is 0.5931
2022-10-02 17:03:40,616:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:40,616:INFO:Initializing create_model()
2022-10-02 17:03:40,616:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=AutoETS(seasonal='mul', sp=12, trend='add'), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:40,616:INFO:Checking exceptions
2022-10-02 17:03:40,616:INFO:Importing libraries
2022-10-02 17:03:40,616:INFO:Copying training dataset
2022-10-02 17:03:40,624:INFO:Defining folds
2022-10-02 17:03:40,624:INFO:Declaring metric variables
2022-10-02 17:03:40,624:INFO:Importing untrained model
2022-10-02 17:03:40,624:INFO:Declaring custom model
2022-10-02 17:03:40,624:INFO:ETS Imported successfully
2022-10-02 17:03:40,624:INFO:Starting cross validation
2022-10-02 17:03:40,624:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:40,997:INFO:Calculating mean and std
2022-10-02 17:03:41,005:INFO:Creating metrics dataframe
2022-10-02 17:03:41,005:INFO:Finalizing model
2022-10-02 17:03:41,133:INFO:Uploading results into container
2022-10-02 17:03:41,133:INFO:Uploading model into container now
2022-10-02 17:03:41,133:INFO:master_model_container: 62
2022-10-02 17:03:41,133:INFO:display_container: 6
2022-10-02 17:03:41,133:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:41,133:INFO:create_model() successfully completed......................................
2022-10-02 17:03:41,307:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:41,307:INFO:AutoETS(seasonal='mul', sp=12, trend='add') result for MASE is 0.5931
2022-10-02 17:03:41,307:INFO:AutoETS(seasonal='mul', sp=12, trend='add') is best model
2022-10-02 17:03:41,307:INFO:choose_better completed
2022-10-02 17:03:41,323:INFO:master_model_container: 62
2022-10-02 17:03:41,323:INFO:display_container: 5
2022-10-02 17:03:41,323:INFO:AutoETS(seasonal='mul', sp=12, trend='add')
2022-10-02 17:03:41,323:INFO:tune_model() successfully completed......................................
2022-10-02 17:03:41,507:INFO:Initializing tune_model()
2022-10-02 17:03:41,507:INFO:tune_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12), fold=None, round=4, n_iter=10, custom_grid=None, optimize=MASE, custom_scorer=None, search_algorithm=None, choose_better=True, fit_kwargs=None, return_tuner=False, verbose=True, tuner_verbose=True, kwargs={}, search_library=pycaret, _allowed_search_algorithms=[None, 'random', 'grid'])
2022-10-02 17:03:41,507:INFO:Checking exceptions
2022-10-02 17:03:41,540:INFO:Copying training dataset
2022-10-02 17:03:41,548:INFO:Checking base model
2022-10-02 17:03:41,548:INFO:Base model : Extra Trees w/ Cond. Deseasonalize & Detrending
2022-10-02 17:03:41,548:INFO:Declaring metric variables
2022-10-02 17:03:41,556:INFO:Defining Hyperparameters
2022-10-02 17:03:41,748:INFO:Tuning with n_jobs=-1
2022-10-02 17:03:41,756:INFO:Initializing ForecastingRandomizedGridSearchCV
2022-10-02 17:03:41,981:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:400: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.
  warn(

2022-10-02 17:03:41,997:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:400: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,085:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,085:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,093:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,093:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:400: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,101:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:400: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,109:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:400: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,149:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:400: FutureWarning: Criterion 'mse' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='squared_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,157:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,181:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,191:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,191:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,199:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,199:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:42,210:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,029:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,037:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,061:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,293:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,309:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,341:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,398:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,420:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,440:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,540:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,540:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,563:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,573:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:43,663:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:45,132:INFO:best_params: {'forecaster__model__degree': 1, 'forecaster__model__deseasonal_model': 'additive', 'forecaster__model__regressor__bootstrap': True, 'forecaster__model__regressor__criterion': 'mae', 'forecaster__model__regressor__max_depth': 8, 'forecaster__model__regressor__max_features': 1.0, 'forecaster__model__regressor__min_impurity_decrease': 0.00021909426569644708, 'forecaster__model__regressor__min_samples_leaf': 1, 'forecaster__model__regressor__min_samples_split': 4, 'forecaster__model__regressor__n_estimators': 200, 'forecaster__model__sp': 12, 'forecaster__model__window_length': 12}
2022-10-02 17:03:45,132:INFO:Hyperparameter search completed
2022-10-02 17:03:45,132:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:45,132:INFO:Initializing create_model()
2022-10-02 17:03:45,132:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039B83790>, model_only=True, return_train_score=False, kwargs={'degree': 1, 'deseasonal_model': 'additive', 'regressor__bootstrap': True, 'regressor__criterion': 'mae', 'regressor__max_depth': 8, 'regressor__max_features': 1.0, 'regressor__min_impurity_decrease': 0.00021909426569644708, 'regressor__min_samples_leaf': 1, 'regressor__min_samples_split': 4, 'regressor__n_estimators': 200, 'sp': 12, 'window_length': 12})
2022-10-02 17:03:45,132:INFO:Checking exceptions
2022-10-02 17:03:45,140:INFO:Importing libraries
2022-10-02 17:03:45,140:INFO:Copying training dataset
2022-10-02 17:03:45,140:INFO:Defining folds
2022-10-02 17:03:45,140:INFO:Declaring metric variables
2022-10-02 17:03:45,148:INFO:Importing untrained model
2022-10-02 17:03:45,148:INFO:Declaring custom model
2022-10-02 17:03:45,148:INFO:ExtraTreesRegressor Imported successfully
2022-10-02 17:03:45,157:INFO:Starting cross validation
2022-10-02 17:03:45,165:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:45,253:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:45,253:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:45,269:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:46,102:INFO:Calculating mean and std
2022-10-02 17:03:46,110:INFO:Creating metrics dataframe
2022-10-02 17:03:46,118:INFO:Finalizing model
2022-10-02 17:03:46,182:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:46,534:INFO:Uploading results into container
2022-10-02 17:03:46,534:INFO:Uploading model into container now
2022-10-02 17:03:46,534:INFO:master_model_container: 63
2022-10-02 17:03:46,534:INFO:display_container: 6
2022-10-02 17:03:46,534:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(bootstrap=True,
                                                  criterion='mae', max_depth=8,
                                                  min_impurity_decrease=0.00021909426569644708,
                                                  min_samples_split=4,
                                                  n_estimators=200, n_jobs=-1,
                                                  random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:46,534:INFO:create_model() successfully completed......................................
2022-10-02 17:03:46,702:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:46,702:INFO:choose_better activated
2022-10-02 17:03:46,710:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:46,718:INFO:Initializing create_model()
2022-10-02 17:03:46,718:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:46,718:INFO:Checking exceptions
2022-10-02 17:03:46,718:INFO:Importing libraries
2022-10-02 17:03:46,726:INFO:Copying training dataset
2022-10-02 17:03:46,726:INFO:Defining folds
2022-10-02 17:03:46,726:INFO:Declaring metric variables
2022-10-02 17:03:46,726:INFO:Importing untrained model
2022-10-02 17:03:46,726:INFO:Declaring custom model
2022-10-02 17:03:46,734:INFO:ExtraTreesRegressor Imported successfully
2022-10-02 17:03:46,734:INFO:Starting cross validation
2022-10-02 17:03:46,734:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:47,271:INFO:Calculating mean and std
2022-10-02 17:03:47,271:INFO:Creating metrics dataframe
2022-10-02 17:03:47,271:INFO:Finalizing model
2022-10-02 17:03:47,431:INFO:Uploading results into container
2022-10-02 17:03:47,431:INFO:Uploading model into container now
2022-10-02 17:03:47,431:INFO:master_model_container: 64
2022-10-02 17:03:47,431:INFO:display_container: 7
2022-10-02 17:03:47,431:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:47,431:INFO:create_model() successfully completed......................................
2022-10-02 17:03:47,598:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:47,598:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12) result for MASE is 0.62
2022-10-02 17:03:47,598:INFO:SubProcess create_model() called ==================================
2022-10-02 17:03:47,598:INFO:Initializing create_model()
2022-10-02 17:03:47,598:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=BaseCdsDtForecaster(regressor=ExtraTreesRegressor(bootstrap=True,
                                                  criterion='mae', max_depth=8,
                                                  min_impurity_decrease=0.00021909426569644708,
                                                  min_samples_split=4,
                                                  n_estimators=200, n_jobs=-1,
                                                  random_state=1),
                    sp=12, window_length=12), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={'fh': ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True)}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:03:47,598:INFO:Checking exceptions
2022-10-02 17:03:47,606:INFO:Importing libraries
2022-10-02 17:03:47,606:INFO:Copying training dataset
2022-10-02 17:03:47,606:INFO:Defining folds
2022-10-02 17:03:47,606:INFO:Declaring metric variables
2022-10-02 17:03:47,606:INFO:Importing untrained model
2022-10-02 17:03:47,606:INFO:Declaring custom model
2022-10-02 17:03:47,606:INFO:ExtraTreesRegressor Imported successfully
2022-10-02 17:03:47,606:INFO:Starting cross validation
2022-10-02 17:03:47,606:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:03:47,690:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:47,698:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:47,698:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:48,514:INFO:Calculating mean and std
2022-10-02 17:03:48,514:INFO:Creating metrics dataframe
2022-10-02 17:03:48,523:INFO:Finalizing model
2022-10-02 17:03:48,572:WARNING:C:\Users\Alan\AppData\Roaming\Python\Python38\site-packages\sklearn\ensemble\_forest.py:407: FutureWarning: Criterion 'mae' was deprecated in v1.0 and will be removed in version 1.2. Use `criterion='absolute_error'` which is equivalent.
  warn(

2022-10-02 17:03:48,917:INFO:Uploading results into container
2022-10-02 17:03:48,917:INFO:Uploading model into container now
2022-10-02 17:03:48,917:INFO:master_model_container: 65
2022-10-02 17:03:48,917:INFO:display_container: 7
2022-10-02 17:03:48,917:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(bootstrap=True,
                                                  criterion='mae', max_depth=8,
                                                  min_impurity_decrease=0.00021909426569644708,
                                                  min_samples_split=4,
                                                  n_estimators=200, n_jobs=-1,
                                                  random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:48,917:INFO:create_model() successfully completed......................................
2022-10-02 17:03:49,089:INFO:SubProcess create_model() end ==================================
2022-10-02 17:03:49,089:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(bootstrap=True,
                                                  criterion='mae', max_depth=8,
                                                  min_impurity_decrease=0.00021909426569644708,
                                                  min_samples_split=4,
                                                  n_estimators=200, n_jobs=-1,
                                                  random_state=1),
                    sp=12, window_length=12) result for MASE is 0.771
2022-10-02 17:03:49,089:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12) is best model
2022-10-02 17:03:49,089:INFO:choose_better completed
2022-10-02 17:03:49,107:INFO:master_model_container: 65
2022-10-02 17:03:49,107:INFO:display_container: 6
2022-10-02 17:03:49,107:INFO:BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)
2022-10-02 17:03:49,107:INFO:tune_model() successfully completed......................................
2022-10-02 17:09:13,360:INFO:Initializing blend_models()
2022-10-02 17:09:13,360:INFO:blend_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator_list=[ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True), AutoETS(seasonal='mul', sp=12, trend='add'), BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)], fold=None, round=4, choose_better=False, optimize=MASE, method=voting, weights=exp_smooth    0.673913
ets           0.670165
et_cds_dt     0.655922
Name: MAPE, dtype: object, fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-10-02 17:09:13,360:INFO:Checking exceptions
2022-10-02 17:09:13,440:INFO:Importing libraries
2022-10-02 17:09:13,448:INFO:Copying training dataset
2022-10-02 17:09:13,456:INFO:Getting model names
2022-10-02 17:09:13,472:INFO:SubProcess create_model() called ==================================
2022-10-02 17:09:13,488:INFO:Initializing create_model()
2022-10-02 17:09:13,496:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=exp_smooth    0.673913
ets           0.670165
et_cds_dt     0.655922
Name: MAPE, dtype: object), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001903CD70F10>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:09:13,496:INFO:Checking exceptions
2022-10-02 17:09:13,496:INFO:Importing libraries
2022-10-02 17:09:13,496:INFO:Copying training dataset
2022-10-02 17:09:13,504:INFO:Defining folds
2022-10-02 17:09:13,504:INFO:Declaring metric variables
2022-10-02 17:09:13,512:INFO:Importing untrained model
2022-10-02 17:09:13,512:INFO:Declaring custom model
2022-10-02 17:09:13,536:INFO:EnsembleForecaster Imported successfully
2022-10-02 17:09:13,552:INFO:Starting cross validation
2022-10-02 17:09:13,560:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:09:20,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,282:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,298:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:09:20,330:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:09:20,355:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:09:20,355:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:10:31,652:INFO:Initializing blend_models()
2022-10-02 17:10:31,652:INFO:blend_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator_list=[ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True), AutoETS(seasonal='mul', sp=12, trend='add'), BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)], fold=None, round=4, choose_better=False, optimize=MASE, method=voting, weights=[0.6739130434782609 0.6701649175412294 0.6559220389805097], fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-10-02 17:10:31,652:INFO:Checking exceptions
2022-10-02 17:10:31,709:INFO:Importing libraries
2022-10-02 17:10:31,709:INFO:Copying training dataset
2022-10-02 17:10:31,718:INFO:Getting model names
2022-10-02 17:10:31,726:INFO:SubProcess create_model() called ==================================
2022-10-02 17:10:31,741:INFO:Initializing create_model()
2022-10-02 17:10:31,750:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=array([0.6739130434782609, 0.6701649175412294, 0.6559220389805097],
      dtype=object)), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019039C252E0>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:10:31,750:INFO:Checking exceptions
2022-10-02 17:10:31,750:INFO:Importing libraries
2022-10-02 17:10:31,750:INFO:Copying training dataset
2022-10-02 17:10:31,750:INFO:Defining folds
2022-10-02 17:10:31,750:INFO:Declaring metric variables
2022-10-02 17:10:31,758:INFO:Importing untrained model
2022-10-02 17:10:31,758:INFO:Declaring custom model
2022-10-02 17:10:31,773:INFO:EnsembleForecaster Imported successfully
2022-10-02 17:10:31,782:INFO:Starting cross validation
2022-10-02 17:10:31,790:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:10:37,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,265:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,281:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,305:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:10:37,321:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:10:37,337:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:10:37,369:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:12:24,159:INFO:Initializing blend_models()
2022-10-02 17:12:24,159:INFO:blend_models(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator_list=[ExponentialSmoothing(seasonal='additive', sp=12, trend='multiplicative',
                     use_boxcox=True), AutoETS(seasonal='mul', sp=12, trend='add'), BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1, random_state=1),
                    sp=12, window_length=12)], fold=None, round=4, choose_better=False, optimize=MASE, method=voting, weights=[0.6739130434782609, 0.6701649175412294, 0.6559220389805097], fit_kwargs=None, groups=None, probability_threshold=None, verbose=True, return_train_score=False)
2022-10-02 17:12:24,159:INFO:Checking exceptions
2022-10-02 17:12:24,223:INFO:Importing libraries
2022-10-02 17:12:24,223:INFO:Copying training dataset
2022-10-02 17:12:24,239:INFO:Getting model names
2022-10-02 17:12:24,255:INFO:SubProcess create_model() called ==================================
2022-10-02 17:12:24,271:INFO:Initializing create_model()
2022-10-02 17:12:24,271:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=[0.6739130434782609, 0.6701649175412294,
                                       0.6559220389805097]), fold=None, round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000190420A9640>, model_only=True, return_train_score=False, kwargs={})
2022-10-02 17:12:24,271:INFO:Checking exceptions
2022-10-02 17:12:24,279:INFO:Importing libraries
2022-10-02 17:12:24,279:INFO:Copying training dataset
2022-10-02 17:12:24,287:INFO:Defining folds
2022-10-02 17:12:24,287:INFO:Declaring metric variables
2022-10-02 17:12:24,295:INFO:Importing untrained model
2022-10-02 17:12:24,295:INFO:Declaring custom model
2022-10-02 17:12:24,311:INFO:EnsembleForecaster Imported successfully
2022-10-02 17:12:24,335:INFO:Starting cross validation
2022-10-02 17:12:24,335:INFO:Cross validating with ExpandingWindowSplitter(fh=ForecastingHorizon([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], dtype='int64', is_relative=True),
                        initial_window=96, step_length=12), n_jobs=-1
2022-10-02 17:12:30,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,879:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,929:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:30,945:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:12:30,963:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:12:30,996:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:12:32,070:INFO:Calculating mean and std
2022-10-02 17:12:32,070:INFO:Creating metrics dataframe
2022-10-02 17:12:32,078:INFO:Finalizing model
2022-10-02 17:12:34,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:34,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:34,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:34,146:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:12:35,270:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:12:35,478:INFO:Uploading results into container
2022-10-02 17:12:35,478:INFO:Uploading model into container now
2022-10-02 17:12:35,478:INFO:master_model_container: 66
2022-10-02 17:12:35,478:INFO:display_container: 7
2022-10-02 17:12:35,486:INFO:_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=[0.6739130434782609, 0.6701649175412294,
                                       0.6559220389805097])
2022-10-02 17:12:35,486:INFO:create_model() successfully completed......................................
2022-10-02 17:12:35,760:INFO:SubProcess create_model() end ==================================
2022-10-02 17:12:35,776:INFO:master_model_container: 66
2022-10-02 17:12:35,776:INFO:display_container: 7
2022-10-02 17:12:35,784:INFO:_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=[0.6739130434782609, 0.6701649175412294,
                                       0.6559220389805097])
2022-10-02 17:12:35,784:INFO:blend_models() successfully completed......................................
2022-10-02 17:13:39,399:INFO:Mime type rendering requires nbformat>=4.2.0 but it is not installed
2022-10-02 17:13:39,399:INFO:Visual Rendered Unsuccessfully
2022-10-02 17:14:30,589:INFO:Initializing finalize_model()
2022-10-02 17:14:30,589:INFO:finalize_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=[0.6739130434782609, 0.6701649175412294,
                                       0.6559220389805097]), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2022-10-02 17:14:30,601:INFO:Finalizing _EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=[0.6739130434782609, 0.6701649175412294,
                                       0.6559220389805097])
2022-10-02 17:14:30,613:INFO:Initializing create_model()
2022-10-02 17:14:30,613:INFO:create_model(self=<pycaret.time_series.forecasting.oop.TSForecastingExperiment object at 0x00000190349C3F10>, estimator=_EnsembleForecasterWithVoting(forecasters=[('Exponential Smoothing',
                                            ExponentialSmoothing(seasonal='additive',
                                                                 sp=12,
                                                                 trend='multiplicative',
                                                                 use_boxcox=True)),
                                           ('ETS',
                                            AutoETS(seasonal='mul', sp=12,
                                                    trend='add')),
                                           ('ExtraTreesRegressor',
                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                              random_state=1),
                                                                sp=12,
                                                                window_length=12))],
                              method='voting', n_jobs=-1,
                              weights=[0.6739130434782609, 0.6701649175412294,
                                       0.6559220389805097]), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2022-10-02 17:14:30,613:INFO:Checking exceptions
2022-10-02 17:14:30,621:INFO:Importing libraries
2022-10-02 17:14:30,621:INFO:Copying training dataset
2022-10-02 17:14:30,621:INFO:Defining folds
2022-10-02 17:14:30,621:INFO:Declaring metric variables
2022-10-02 17:14:30,621:INFO:Importing untrained model
2022-10-02 17:14:30,621:INFO:Declaring custom model
2022-10-02 17:14:30,629:INFO:EnsembleForecaster Imported successfully
2022-10-02 17:14:30,629:INFO:Cross validation set to False
2022-10-02 17:14:30,629:INFO:Fitting Model
2022-10-02 17:14:32,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:14:32,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:14:32,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:14:32,666:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2022-10-02 17:14:33,720:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2022-10-02 17:14:33,952:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                _EnsembleForecasterWithVoting(forecasters=[('Exponential '
                                                                                                            'Smoothing',
                                                                                                            ExponentialSmoothing(seasonal='additive',
                                                                                                                                 sp=12,
                                                                                                                                 trend='multiplicative',
                                                                                                                                 use_boxcox=True)),
                                                                                                           ('ETS',
                                                                                                            AutoETS(seasonal='mul',
                                                                                                                    sp=12,
                                                                                                                    trend='add')),
                                                                                                           ('ExtraTreesRegressor',
                                                                                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                                                                                              random_state=1),
                                                                                                                                sp=12,
                                                                                                                                window_length=12))],
                                                                                              method='voting',
                                                                                              n_jobs=-1,
                                                                                              weights=[0.6739130434782609,
                                                                                                       0.6701649175412294,
                                                                                                       0.6559220389805097]))]))])
2022-10-02 17:14:33,952:INFO:create_model() successfully completed......................................
2022-10-02 17:14:34,640:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2022-10-02 17:14:34,927:INFO:display_container: 10
2022-10-02 17:14:34,927:INFO:master_model_container: 66
2022-10-02 17:14:34,927:INFO:display_container: 10
2022-10-02 17:14:34,975:INFO:ForecastingPipeline(steps=[('forecaster',
                            TransformedTargetForecaster(steps=[('model',
                                                                _EnsembleForecasterWithVoting(forecasters=[('Exponential '
                                                                                                            'Smoothing',
                                                                                                            ExponentialSmoothing(seasonal='additive',
                                                                                                                                 sp=12,
                                                                                                                                 trend='multiplicative',
                                                                                                                                 use_boxcox=True)),
                                                                                                           ('ETS',
                                                                                                            AutoETS(seasonal='mul',
                                                                                                                    sp=12,
                                                                                                                    trend='add')),
                                                                                                           ('ExtraTreesRegressor',
                                                                                                            BaseCdsDtForecaster(regressor=ExtraTreesRegressor(n_jobs=-1,
                                                                                                                                                              random_state=1),
                                                                                                                                sp=12,
                                                                                                                                window_length=12))],
                                                                                              method='voting',
                                                                                              n_jobs=-1,
                                                                                              weights=[0.6739130434782609,
                                                                                                       0.6701649175412294,
                                                                                                       0.6559220389805097]))]))])
2022-10-02 17:14:34,975:INFO:finalize_model() successfully completed......................................
2022-10-02 17:14:35,875:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2022-10-02 17:14:36,483:WARNING:predict_model >> Prediction Indices do not match test indices. Metrics will not be displayed.
2022-10-02 17:14:36,812:INFO:Mime type rendering requires nbformat>=4.2.0 but it is not installed
2022-10-02 17:14:36,812:INFO:Visual Rendered Unsuccessfully
